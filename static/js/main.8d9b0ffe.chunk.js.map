{"version":3,"sources":["store/actions/calendar.ts","store/actions/ux.ts","store/actions/ui.ts","lib/tools.ts","components/Timeline/Timeline.jsx","lib/patterns.js","lib/time_methods.ts","lib/date_methods.ts","lib/task_methods.ts","types/data.ts","components/ModalWindow/modalFooterContainers/FooterMainContainer.tsx","components/ModalWindow/modalFooterContainers/FooterSheduleContainer.tsx","lib/middleware.ts","components/ModalWindow/modalFooterContainers/FooterComplContainer.tsx","components/ModalWindow/TaskForm.tsx","lib/validation.ts","components/Schedule/Schedule.tsx","components/Schedule/StoredSchedule.ts","components/ModalWindow/ModalInformer.tsx","components/ComplicatedTasks/ComplicatedTasks.tsx","components/ComplicatedTasks/StoredComplTasks.ts","components/Statistic/Statistic.jsx","store/container/StoreStat.js","components/Preference/PatternPreference.jsx","store/container/StoredPatternPref.js","components/Preference/TimeEstimatePreference.jsx","store/container/StoredTEP.js","components/SideBar/SideBar.tsx","components/Navigation/Navigation.jsx","components/ModalWindow/graphs/ScheduleTask.jsx","components/Main/Main.tsx","components/Main/StoredMain.ts","store/reducer/calendar.ts","lib/form_methods.ts","store/reducer/ui.ts","store/reducer/ux.ts","store/store.ts","index.js"],"names":["A_CAL","calendar","type","day","task","id","schedule","weekdays","weekends","A_UX","lang","aggressivenessExclude","aggressivenessSqueezing","aggressivenessPermutation","minTaskTime","A_UI","value","data","checked","rand","Math","random","toString","slice","sortByTime","arr","sort","itemA","itemB","start","changeID","map","element","index","delColon","str","insertColon","length","isArray","Array","Object","prototype","call","isObject","obj","cloneDeep","mas","masClone","keys","forEach","key","TimelineDot","position","txt","transform","cy","r","style","fill","y","x","fontSize","Canvas","children","height","width","className","Timeline","name","times","d3","d","scale","domain","range","i","title","toUpperCase","default_weekdays","end","importance","exclusivity","compressibility","urgent","movable","default_weekends","prep_data_timeline","v","validKeys","includes","filterKeys","time_estimate","acc","len","demountTime","diffTime","detailFreeTime","push","duration","defineTaskStart","freeTimes","lastTime","epsilonStart","t","minTime","maxTime","eps","minEpsilonStart","min","indexOf","a","b","max","mountTime","moment","formTime","buildStringTime","time","hours","floor","minutes","formMin","addTime","divTime","perc","formLabourTime","labour","integerPart","floatPart","months","monthsDay","getDate","cal","year","month","prepareDate","Date","daysLag","ceil","abs","getTime","addDays","date","days","setDate","buildIterDate","getFullYear","getMonth","fill_calendar","fillObject","j","getDay","schedule_render","add_task","remove_task","filter","fillTime","RegExp","test","simpleTaskFill","taskArr","undefined","complTaskFill","deadline","compressGap","newArr","durationTask","compressTask","compressionRatio","round","findIdIndex","chooseTask","gap","pastTaskId","dur","moveTask","tgtTask","temp","result","gapDurArr","text","JSON","parse","lg","info","tempNumArr","lastDayTaskStart","dayFreeTime","tempNum","dedlinePostponement","dateTrack","FooterMainContainer","connect","state","core","switcher","ui","pattern_modal_mode","form","formEl","ux","dispatch","toggleMode","setWeekdays","setWeekends","setPattern","done","onClick","return","FooterSheduleContainer","chosenDay","modal_AS_mode","taskManage","new_calend","_toggleModal","cancelModal","_toggleModeModal","endEditTaskForm","props","closeModalWith","edit","e","delete","runDysplaySchedule","set","FillTaskInIterDay","DATE","iterDay","taskStart","freePeriods","complTask","tasklabourPerDay","defineNewTaskDate","now","dysplaySchedule","setting","func","universalCalendarMiddleWare","FooterComplContainer","tasks","_add","runEstimateTask","arg","res","checkMaxFreeTime","_remove","_toggle","_cancel","finalize","modal_ACT_mode","add","estimate","RangePicker","ModalTaskForm","inputText","setCheckBox","inputDeadline","sw3","modal_AS_visible","sw4","sw5","modal_ACT_visible","sw6","sw7","pattern_modal_visible","sw8","modalType","modal_container","cn","modal_input","modal_list","inputDate","d_str","inputTask","currentTarget","checkTask","target","validationInput","isNaN","number_validation","wrong","freeTime","nearestPeriod","endNearestPeriod","enougthTime","date_validation","string_validation","closable","modal_title","edit_task","getTitleModal","visible","getVisibleModal","footer","centered","el","isTime","field","tag","trigger","placement","overlayClassName","addonBefore","onChange","size","placeholder","insert","showTime","dedline","disabled","format","cal_start","cal_end","buildFormElementFrom","theme","mode","item","Item","borderRadius","remove","no_entries","Schedule","autoToggleModal","bool","TaskForm","changeFieldsValue","changeCheckBox","setSimpleTaskForm","chosedTask","String","fromCharCode","join","toLocaleString","getHours","getMinutes","StoredSchedule","ModalInformer","periods","toggle","ComplicatedTasks","booline","_toggleMode","add_compl","changeData","info_modal_visible","_toggleInfoModal","setComplicatedTaskForm","StoredComplTasks","Statistic","store","columns","dataIndex","expandedRowRender","record","margin","dataSource","StoreStat","toggleModal","PatternPreference","_setCalendar","StoredPatternPref","TimeEstimatePreference","SAE","SAS","SAP","setMinimumTaskTime","mainL","tep_sae","tep_sas","tep_sap","StoredTEP","num","Sider","SideBar","choseD","setSched","useEffect","completedFillPattern","handleClick","dateString","background","breakpoint","collapsedWidth","border","fullscreen","SubMenu","Navigation","to","job","statistic","preference","tep","BarChartV4","scaleColor","scaleHeight","scaleWidth","padding","this","updateChart","prevProps","prevState","updateScales","animDuration","faux","connectFauxDOM","bars","selectAll","exit","transition","attr","enter","append","merge","count","bandwidth","animateFauxDOM","chart","React","Component","withFauxDOM","Header","Content","Footer","Option","Main","_choseDay","_langChange","_setWeekdaysPattern","_setSchedule","_setWeekendsPattern","togglePatternModal","startCondition","entries","defaultValue","exact","path","component","StoredMain","initialState","quickTask","setFormInputField","setFormCheckboxField","setFormCalpikerField","setFormField","fields","parseFields","setFormFieldFromSimpleTask","taskEntries","parseSimpleTask","setFormFieldFromComplicatedTask","parseComplicatedTask","simpleTaskEdit","complTaskEdit","complTaskField","simplTaskField","rootReducer","combineReducers","action","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","createStore","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.8d9b0ffe.chunk.js","sourcesContent":["import { DateTrackType, TaskType, ComplicatedTaskType } from './../../types/data';\r\n\r\nexport const A_CAL = {              \r\n  setCalendar: (calendar: any) => ({\r\n    type:  'SET_CAL',\r\n    calendar\r\n  } as const),\r\n  manageSimpleTask: (calendar: any) => ({\r\n    type:  'MANAGE_SIMPLE_TASK',\r\n    calendar\r\n  } as const),\r\n  choseDay: (day: DateTrackType) => ({\r\n    type:  'CHOSE_DAY',\r\n    day\r\n  } as const),\r\n  addComplicatedTask: (task: ComplicatedTaskType) => ({\r\n    type:  'ADD_COMPLICATED_TASK',\r\n    task\r\n  } as const),\r\n  removeComplicatedTask: (id: string) => ({\r\n    type:  'REMOVE_COMPLICATED_TASK',\r\n    id\r\n  } as const),\r\n  setSchedule: (schedule: TaskType[]) => ({\r\n    type:  'SET_SCHEDULE',\r\n    schedule\r\n  } as const),\r\n  setWeekdaysPattern: (weekdays: TaskType[]) => ({\r\n    type:  'SET_WEEKDAY_PATTERN',\r\n    weekdays\r\n  } as const),\r\n  setWeekendsPattern: (weekends: TaskType[]) => ({\r\n    type:  'SET_WEEKEND_PATTERN',\r\n    weekends\r\n  } as const)\r\n}\r\n\r\n\r\n\r\n","import { LocaleType } from '../../types/data';\r\n\r\nexport const A_UX = {\r\n  langChange: (lang: LocaleType) => ({\r\n    type: 'CHANGE_LANG',\r\n    lang\r\n  } as const ),\r\n  complFillPattern: () => ({\r\n    type: 'COMPLETE_FILL_PATTERN'\r\n  } as const ),\r\n  setAggressivenessExclude: (aggressivenessExclude: number) => ({\r\n    type: 'SET_AGGRESSIVENESS_EXCLUDE',\r\n    aggressivenessExclude\r\n  } as const ),\r\n  setAggressivenessSqueezing: (aggressivenessSqueezing: number) => ({\r\n    type: 'SET_AGGRESSIVENESS_SQUEEZING',\r\n    aggressivenessSqueezing\r\n  } as const ),\r\n  setAggressivenessPermutation: (aggressivenessPermutation: number) => ({\r\n    type: 'SET_AGGRESSIVENESS_PERMUTATION',\r\n    aggressivenessPermutation\r\n  } as const ),\r\n  setMinimumTaskTime: (minTaskTime: number) => ({\r\n    type: 'SET_MIN_TASK_TIME',\r\n    minTaskTime\r\n  } as const )\r\n} \r\n\r\n","\r\nimport { TaskType, ComplicatedTaskType } from './../../types/data'\r\n\r\nexport const A_UI = {\r\n  toggleModalAST: () => ({\r\n    type: 'TOGGLE_MODAL_ADD_SIMPLE_TASK',\r\n  } as const ),\r\n  cancelModalAST: () => ({\r\n    type: 'CANCEL_MODAL_ADD_SIMPLE_TASK',\r\n  } as const),\r\n  toggleModalACT: () => ({\r\n    type: 'TOGGLE_MODAL_ADD_COMPLICATED_TASK',\r\n  } as const),\r\n  cancelModalACT: () => ({\r\n    type: 'CANCEL_MODAL_ADD_COMPLICATED_TASK',\r\n  } as const),\r\n  toggleModeModalAST: () => ({\r\n    type: 'TOGGLE_MODE_MODAL_ADD_SIMPLE_TASK'\r\n  } as const),\r\n  toggleModeModalACT: () => ({\r\n    type: 'TOGGLE_MODE_MODAL_ADD_COMPLICATED_TASK'\r\n  } as const),\r\n  togglePatternModal: () => ({\r\n    type: 'TOGGLE_PATTERN_MODAL'\r\n  } as const),\r\n  toggleModePatternModal: () => ({\r\n    type: 'TOGGLE_MODE_PATTERN_MODAL'\r\n  } as const),\r\n  toggleInfoModal: () => ({\r\n    type: 'TOGGLE_INFO_MODAL'\r\n  } as const),\r\n  changeFieldsValue: (id: string, value: string) => ({\r\n    type:  'CHANGE_FIELD_VALUE',\r\n    id, value\r\n  } as const),\r\n  changeData: (data: string[]) => ({\r\n    type:  'CHANGE_FIELD_DATA',\r\n    data\r\n  } as const),\r\n  changeCheckBox: (id: string, checked: boolean) => ({\r\n    type:  'CHANGE_FIELD_CHECKBOX',\r\n    id, checked\r\n  } as const),\r\n  setSimpleTaskForm: (task: TaskType) => ({\r\n    type: 'RUN_EDIT_SIMPLE_TASK', task\r\n  } as const),\r\n  setComplicatedTaskForm: (task: ComplicatedTaskType) => ({\r\n    type: 'RUN_EDIT_COMPLE_TASK', task\r\n  } as const),\r\n  endEditTaskForm: () => ({\r\n    type: 'END_EDIT_COMPLE_TASK'\r\n  } as const)\r\n} \r\n\r\n\r\n\r\n","import { DateTrackType } from './../types/data'\r\nimport { ComplicatedTaskType, TaskType } from \"../types/data\"\r\nexport const rand = (): string => Math.random().toString().slice(2)\r\nexport const searchID = (arr: ComplicatedTaskType[], id: string): ComplicatedTaskType => arr.filter(v => v.id === id)[0]\r\nexport const searchIDObj = (arr: ComplicatedTaskType[], id: string): any => Object.values(arr.filter(v => v.id === id)[0] )\r\nexport const sum = (arr: number[]) => arr.reduce( (acc, cur) => acc + cur, 0 ) \r\nexport const sortByTime = (arr: TaskType[]) => arr.sort( (itemA: TaskType, itemB: TaskType) => +itemA.start - +itemB.start )\r\nexport const changeID = (arr: TaskType[]): TaskType[] => arr.map((element:TaskType, index) => {\r\n  element.id = index.toString()\r\n  return element\r\n})\r\nexport const clone = (cal: any, day: DateTrackType) => cal[day.year] ? Object.assign({}, cal) : cal\r\nexport const delColon = (str: string): string => `${str[0]}${str[1]}${str[3]}${str[4]}`\r\nexport const insertColon = (str: string|undefined): string => str? str.length === 4? `${str[0]}${str[1]}:${str[2]}${str[3]}`: str: '' \r\n// глубокое копирование обьектов\r\nlet isArray = Array.isArray || function (arr) {\r\n  return Object.prototype.toString.call(arr) === \"[object Array]\";\r\n}\r\nlet isObject = function (obj: any) {\r\n  return Object.prototype.toString.call(obj) === \"[object Object]\";\r\n}\r\nexport function cloneDeep(mas: any) {\r\n  let masClone: any = isArray(mas) ? new Array(mas.length) : {};  \r\n  Object.keys(mas).forEach(function (key) {\r\n    if (isArray(mas[key]) || isObject(mas[key]))\r\n      masClone[key] = cloneDeep(mas[key]);\r\n    else\r\n      masClone[key] = mas[key];\r\n  })\r\n  return masClone;\r\n}\r\n","import React from 'react'\r\nimport * as d3 from 'd3'\r\nimport './Timeline.less'\r\nimport { insertColon } from '../../lib/tools'\r\n\r\nconst TimelineDot = ({position, txt}) =>\r\n    <g transform={`translate(${position},0)`}>\r\n       <circle cy={160}\r\n               r={5}\r\n               style={{fill: 'blue'}} />\r\n       <text y={115}\r\n             x={-95}\r\n             transform=\"rotate(-45)\"\r\n             style={{fontSize: '12px'}}>{txt}</text>\r\n    </g>\r\n\r\nconst Canvas = ({children}) =>\r\n      <svg height=\"200\" width=\"800\" className=\"canvas\">\r\n        {children}\r\n      </svg>\r\n\r\nconst Timeline = ({data = [], name}) => {\r\n  const times = d3.extent(data.map(d => d.start) )\r\n  const range = [10, 700]      \r\n  const scale = d3.scaleLinear().domain(times).range(range)\r\n      return (\r\n          <div className=\"timeline\">\r\n              <h1>{name}</h1>\r\n              <Canvas>\r\n                  {data.map((d, i) =>\r\n                      <TimelineDot position={scale(d.start) }\r\n                      key={i}  txt={`${insertColon(d.start)} - ${d.title.toUpperCase()}`}\r\n                      />\r\n                  )}\r\n              </Canvas>\r\n          </div>\r\n      )\r\n  \r\n}\r\n\r\n\r\nexport default Timeline","\r\nexport const default_weekdays = [\r\n    {\r\n      title: 'sleep',\r\n      id: '1',\r\n      start: '0000',\r\n      end: '0630',\r\n      importance: '8',\r\n      exclusivity: false,\r\n      compressibility: true, \r\n      urgent:  false,\r\n      movable: false,\r\n          \r\n  },\r\n    {\r\n      title: 'morning_care',\r\n      id: '2',\r\n      start: '0630',\r\n      end: '0635',\r\n      importance: '8', \r\n      exclusivity: false,\r\n      compressibility: true,\r\n      urgent:  false,\r\n      movable: false,\r\n          \r\n  },\r\n    {\r\n      title: 'breakfast',\r\n      id: '3',\r\n      start: '0635',\r\n      end: '0650',\r\n      importance: '8', \r\n      exclusivity: false,\r\n      compressibility: true,\r\n      urgent:  false,\r\n      movable: false,\r\n          \r\n  },\r\n    {\r\n      title: 'lanch',\r\n      id: '4',\r\n      start: '1200',\r\n      end: '1230',\r\n      importance: '8', \r\n      exclusivity: false,\r\n      compressibility: true,\r\n      urgent:  false,\r\n      movable: true,\r\n          \r\n  },\r\n    {\r\n      title: 'job',\r\n      id: '5',\r\n      start: '1230',\r\n      end: '1330',\r\n      importance: '8', \r\n      exclusivity: false,\r\n      compressibility: true,\r\n      urgent:  false,\r\n      movable: true,\r\n          \r\n  },  \r\n    {\r\n      title: 'dinner',\r\n      id: '6',\r\n      start: '1800',\r\n      end: '1830',\r\n      importance: '8', \r\n      exclusivity: false,\r\n      compressibility: true,\r\n      urgent:  false,     \r\n      movable: true,\r\n          \r\n  },\r\n    {\r\n      title: 'evening_sleep',\r\n      id: '7',\r\n      start: '2300',\r\n      end: '2400',\r\n      importance: '8', \r\n      exclusivity: false,\r\n      compressibility: true,\r\n      urgent:  false,\r\n      movable: false,\r\n          \r\n  },\r\n]\r\n\r\nexport const default_weekends = [\r\n  {\r\n    title: 'sleep',\r\n    id: '1',\r\n    start: '0000',\r\n    end: '0630',\r\n    importance: '8', \r\n    exclusivity: false,\r\n    compressibility: true, \r\n    urgent:  false,\r\n    movable: false,\r\n        \r\n},\r\n  {\r\n    title: 'morning_care',\r\n    id: '2',\r\n    start: '0630',\r\n    end: '0635',\r\n    importance: '8', \r\n    exclusivity: false,\r\n    compressibility: true,\r\n    urgent:  false,\r\n    movable: false,\r\n        \r\n},\r\n  {\r\n    title: 'breakfast',\r\n    id: '3',\r\n    start: '0635',\r\n    end: '0650',\r\n    importance: '8', \r\n    exclusivity: false,\r\n    compressibility: true,\r\n    urgent:  false,\r\n    movable: false,\r\n        \r\n},\r\n  {\r\n    title: 'lanch',\r\n    id: '4',\r\n    start: '1200',\r\n    end: '1230',\r\n    importance: '8', \r\n    exclusivity: false,\r\n    compressibility: true,\r\n    urgent:  false,\r\n    movable: true,\r\n        \r\n},  \r\n  {\r\n    title: 'dinner',\r\n    id: '5',\r\n    start: '1800',\r\n    end: '1830',\r\n    importance: '8', \r\n    exclusivity: false,\r\n    compressibility: true,\r\n    urgent:  false,\r\n    movable: true,\r\n        \r\n},\r\n  {\r\n    title: 'evening_sleep',\r\n    id: '6',\r\n    start: '2300',\r\n    end: '2400',\r\n    importance: '8', \r\n    exclusivity: false,\r\n    compressibility: true,\r\n    urgent:  false,\r\n    movable: false,\r\n        \r\n},\r\n]\r\n\r\n\r\n","import { TaskType, GapTime } from './../types/data';\r\nexport function formateDate(lang: string){\r\n  return new Date().toLocaleString(lang, {\r\n    year: 'numeric',\r\n    month: 'long',\r\n    day: 'numeric'\r\n  })\r\n}\r\n// фильтрация полей\r\nconst filterKeys = (obj: any) => {\r\n  const validKeys = ['title', 'start']\r\n  Object.keys(obj).forEach((key) => validKeys.includes(key) || delete obj[key])\r\n  return obj\r\n}\r\nexport const prep_data_timeline = (schedule: TaskType[]) => schedule.map(v => filterKeys(v) )\r\nexport const clock = () => `${new Date().getHours()}:${new Date().getMinutes() > 9 ? new Date().getMinutes(): '0' + new Date().getMinutes()}`\r\nexport const time_estimate = (schedule: TaskType[]) => {                                   // все свободное время дня\r\n  let acc: number = 0\r\n  for (let i = 1, len = schedule.length; i < len; i++) {\r\n    acc += schedule[i-1].end !== schedule[i].start ? demountTime(diffTime(schedule[i-1].end, schedule[i].start) ) : 0\r\n  }\r\n  return acc // 100\r\n}\r\n// массив количества свободного времени\r\nexport const detail_estimate = (schedule: TaskType[]): string[] => {                \r\n  let acc = []  \r\n  for (let i = 1, len = schedule.length; i < len; i++) {\r\n    if(schedule[i].start !== schedule[i-1].end) {\r\n      acc.push(diffTime(schedule[i-1].end, schedule[i].start) )\r\n    }\r\n  }\r\n  return acc.length ? acc : [diffTime(schedule[schedule.length - 1].end, '2400')]\r\n}\r\n// массив преиодоов количества свободного времени\r\nexport const detailFreeTime = (schedule: TaskType[]): GapTime => {                \r\n  let acc = []  \r\n  for (let i = 1, len = schedule.length; i < len; i++) {\r\n    if(schedule[i].start !== schedule[i-1].end) {\r\n      acc.push({\r\n        start: schedule[i-1].end,\r\n        duration: diffTime(schedule[i-1].end, schedule[i].start)\r\n      } )\r\n    }\r\n  }\r\n  return acc\r\n}\r\n// находим период самый близкий к прошлому\r\nexport const defineTaskStart = (freeTimes: GapTime, lastTime: string): number => {\r\n  if(lastTime) {\r\n    let epsilonStart = freeTimes.map(t => diffTime(minTime(t.start, lastTime), maxTime(t.start, lastTime) ) )\r\n    .map(eps => demountTime(eps) )    \r\n    let minEpsilonStart = Math.min(...epsilonStart)\r\n    return epsilonStart.indexOf(minEpsilonStart)\r\n  } else {\r\n    return 0\r\n  }    \r\n}\r\nconst maxTime = (a: string, b: string): string => {\r\n  let max = Math.max(demountTime(a), demountTime(b) )\r\n  if(demountTime(a) === max) {\r\n    return a\r\n  } else {\r\n    return b\r\n  }\r\n}\r\nconst minTime = (a: string, b: string): string => {\r\n  let min = Math.min(demountTime(a), demountTime(b) )\r\n  if(demountTime(a) === min) {\r\n    return a\r\n  } else {\r\n    return b\r\n  }\r\n}\r\n// 'ччмм' => мм\r\nconst mountTime = (moment: string): number => {\r\n    let hours: number = +moment.slice(0, -2) * 60\r\n    let minutes: number = +moment.slice(-2)\r\n    return hours + minutes\r\n}\r\n// 'ччмм' => чч\r\nexport const demountTime = (moment: string): number => {\r\n    let hours: number = +moment.slice(0, -2)\r\n    let minutes: number = +moment.slice(-2)  / 60\r\n    return hours + minutes\r\n}\r\nexport const formTime = (moment: string): string => moment.length < 4 ? '0' + moment : moment\r\nexport const buildStringTime = (time: number): string => {\r\n  let hours = Math.floor(time)\r\n  let minutes = 60 / (1 / (time - hours) )\r\n  return `${formMin(hours)}${formMin(minutes)}`\r\n}\r\nconst formMin = (min: number) => min < 10 ? '0' + min : min.toString()\r\n// чмм\r\nexport const diffTime = (a: string, b: string): string => formTime( ( (mountTime(b) - mountTime(a)) - (mountTime(b) - mountTime(a)) % 60) / 60 + formMin( (mountTime(b) - mountTime(a)) % 60) )\r\nexport const addTime = (a: string, b: string): string => formTime( ( (mountTime(b) + mountTime(a)) - (mountTime(b) + mountTime(a)) % 60) / 60 + formMin( (mountTime(b) + mountTime(a)) % 60) )\r\n// сжатие маловажных задач\r\nexport const divTime = (moment: number, perc: number, importance: number): number => moment * ( (perc + importance) * 5 ) / 100       \r\n// ч => чмм\r\nexport const formLabourTime = (labour: number): string => {\r\n  let integerPart = Math.floor(labour).toString()\r\n  let floatPart = Math.floor( (labour - Math.floor(labour) ) * 100)  \r\n  return formTime(integerPart + formMin(Math.floor(floatPart * 0.6) ) )\r\n}\r\n\r\n\r\n\r\n","import { diffTime, demountTime, time_estimate} from './time_methods'\r\nimport { compressTask, moveTask } from './task_methods'\r\nimport { default_weekends } from './patterns'\r\nimport { TaskType, DateTrackType, Settings, NewTaskDate} from '../types/data'\r\nexport const months = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec']\r\nexport const monthsDay = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31]\r\nexport type PrepareDateType = {\r\n  start: Date\r\n  end: Date\r\n  duration: number\r\n}\r\ntype CheckType = {\r\n  start: string\r\n  end: string\r\n  freeIime: number\r\n}\r\nexport const getDate = (cal: any, day: DateTrackType): TaskType[] => cal[day.year][months[day.month]][day.day]\r\n// извлечение даты из дедлайна\r\nexport const prepareDate = (arr: string[]): PrepareDateType => ({\r\n  start: new Date(arr[0]),\r\n  end: new Date(arr[1]),\r\n  duration: daysLag(new Date(arr[1]), new Date(arr[0]))\r\n})\r\n// длительность периода\r\nexport const daysLag = (a: Date, b: Date) => Math.ceil(Math.abs(b.getTime() - a.getTime()) / (1000 * 3600 * 24) )\r\n// перемещение по календарю\r\nexport const addDays = (date: Date, days: number) => new Date(date.setDate(date.getDate() + days) )\r\nexport const buildIterDate = (day: Date): DateTrackType => ({\r\n  year: day.getFullYear(),\r\n  month: day.getMonth(),\r\n  day: day.getDate() - 1\r\n})\r\n// заполнение календаря при первом запуске\r\nexport const fill_calendar = (weekdays: TaskType[] | [], weekends: TaskType[] | []) => {  \r\n  const fillObject = (year: number) => {\r\n    let obj: {[key:string]: any} = {};\r\n    for (let i = 0, len = 12; i < len; i++) {    \r\n      obj[months[i]] = new Array(year % 4 === 0 && i === 1 ? 29 : monthsDay[i]).fill(weekdays)\r\n      for (let j = 0, len = obj[months[i]].length; j < len; j++) {\r\n        let days = new Date(year, i, j).getDay()\r\n          if(days === 5 || days === 6){\r\n            obj[months[i]][j] = weekends\r\n         }\r\n       }      \r\n     }\r\n    return obj\r\n  }\r\n  let calendar: {[key:string]: any} = {}\r\n  for (let i = 0, len = 7; i < len; i++) {     \r\n    calendar[new Date().getFullYear() + i] = fillObject(new Date().getFullYear() + i)\r\n  }  \r\n  return calendar\r\n}\r\n// извлечение событий выбранного дня\r\nexport const schedule_render = (date: DateTrackType, calendar: any) => {\r\n  if(calendar[date.year]) {\r\n    if(Array.isArray(getDate(calendar, date) ) ){\r\n      return getDate(calendar, date) \r\n    } else {\r\n      return default_weekends               \r\n    }     \r\n  }  \r\n  return default_weekends                   \r\n}\r\n// отсрочка дедлайна задачи если свободного времени не хватает\r\nexport const doPostponement = (settings: Settings) => {\r\n  let d = prepareDate(settings.task.deadline), freeTime = 0, days = 0, now = addDays(d.start, -1)\r\n  while(freeTime < +settings.task.labour * 2) {  // may be 3?\r\n    now = addDays(now, 1)\r\n    freeTime += time_estimate(getDate(settings.calendar, buildIterDate(now ) ) )\r\n    days++\r\n  }\r\n  settings.info.dedlinePostponement = days         \r\n  return settings\r\n}\r\n// достаточность времени для создании задачи\r\nexport const checkFreeTime = (arg: Settings) => {\r\n  let d: PrepareDateType = prepareDate(arg.task.deadline), res = 0, now = addDays(d.start, -1)// d.start\r\n  for (let i = -1, len = d.duration; i < len; i++) {\r\n    now = addDays(now, 1)\r\n    res += time_estimate(getDate(arg.calendar, buildIterDate(now) ) )\r\n  }\r\n  return res > +arg.task.labour  \r\n}\r\nexport const checkMaxFreeTime = (arg: Settings) => {\r\n  let d: PrepareDateType = prepareDate(arg.task.deadline), res = 0, now = addDays(d.start, -1)// d.start\r\n  for (let i = -1, len = d.duration; i < len; i++) {\r\n    now = addDays(now, 1)\r\n    res += time_estimate(compressTask(moveTask(getDate(arg.calendar, buildIterDate(now)))))\r\n  }\r\n  return res > +arg.task.labour  \r\n}\r\n/*\r\n// сквозное время (одиноковре на всем протяжении)\r\nexport const checkThroughFreeTime = (calendar: any, task: ComplicatedTaskType) => {\r\n  let d: PrepareDateType = prepareDate(task.deadline) \r\n  let daysTasks: TaskType[][]= []\r\n  let res: CheckType[][] = []\r\n  let now = d.start\r\n  for (let i = -1, len = d.duration; i < len; i++) {\r\n    now = addDays(now, 1)\r\n    daysTasks.push(getDate(calendar, buildIterDate(now) ) )   \r\n  }   \r\n  res = daysTasks.map( (v: TaskType[]) => periodEstimate(v) )\r\n                 .map( (v: CheckType[]) => v\r\n                 .filter( (i: CheckType)  => i.freeIime > +task.labour / d.duration) )                \r\n  if(res.some(v=>!v) ) return false\r\n  return findThroughFreeTime(res, +task.labour)\r\n}\r\n*/\r\n// массив начала и длительности периодов свободного времени\r\nconst periodEstimate = (schedule: TaskType[]): CheckType[] => {                \r\n  let acc = []  \r\n  for (let i = 1, len = schedule.length; i < len; i++) {    \r\n    if(schedule[i].start !== schedule[i-1].end) {\r\n      acc.push({start: schedule[i-1].end, end: schedule[i].start,\r\n        freeIime: demountTime(diffTime(schedule[i-1].end, schedule[i].start) )\r\n      })\r\n    }\r\n  }  \r\n  return acc\r\n}\r\n/*\r\n// поиск одновременных периодов \r\nexport const findThroughFreeTime = (arr: CheckType[][], taskDuration: number) => { \r\n  let res = arr[0], temp = arr[1]    \r\n  for (let i = 1, len = arr.length - 1; i < len; i++) {\r\n    res = res.filter((v: CheckType) => checkIintersectionPeriod(v, temp, taskDuration) )\r\n    if(!res) return false\r\n    temp = arr[i + 1]\r\n  }\r\n  return res\r\n}\r\n// пересечение периодов time и одного из arr\r\nexport const checkIintersectionPeriod = (time: CheckType, arr: CheckType[], dur: number): boolean =>\r\n  !!(arr.filter((v: CheckType) => demountTime(diffTime(Math.min(+v.start, +time.start).toString(), Math.min(+v.end, +time.end).toString() ) ) > dur\r\n  || demountTime(diffTime(Math.min(+v.start, +time.start).toString(), Math.min(+v.end, +time.end).toString() ) ) > dur))\r\n*/\r\nexport const defineNewTaskDate = (set: Settings): NewTaskDate => {\r\n  let start = new Date(set.task.deadline[0])\r\n    let end = new Date(set.task.deadline[1])\r\n    let duration = daysLag(end, start)\r\n    let tasklabourPerDay = +set.task.labour / duration > 0.2 ? +set.task.labour / duration: 0.2\r\n  return { start, end, duration, tasklabourPerDay }\r\n}\r\n\r\n\r\n","import { months, addDays } from './date_methods';\r\nimport { rand, sortByTime, changeID, delColon } from './tools'\r\nimport { diffTime, demountTime, detail_estimate, addTime, formLabourTime, divTime, buildStringTime } from './time_methods' \r\nimport { getDate } from './date_methods'\r\nimport { TaskType, DateTrackType, ComplicatedTaskType } from '../types/data'\r\n\r\nexport const add_task = (cal: any, day: DateTrackType, task: TaskType): void => {\r\n  cal[day.year][months[day.month]][day.day] = changeID(sortByTime([...getDate(cal, day), task]) )\r\n  return cal\r\n}  \r\nexport const remove_task = (cal: any, day: DateTrackType, id: string|undefined) => {     // зависимость от поля id, удаление последнего может вызвать ошпбку\r\n  if(id) cal[day.year][months[day.month]][day.day] = getDate(cal, day).filter((task: TaskType) => task.id !== id); \r\n  return cal \r\n}\r\nexport const find_task = (cal: any, day: DateTrackType, id: number): TaskType => {\r\n    return getDate(cal, day).filter( (task: TaskType) => +task.id === id)[0];\r\n}\r\nexport const edit_task = (cal: any, day: DateTrackType, id: number, task: TaskType) => {\r\n  cal[day.year][months[day.month]][day.day] = [...getDate(cal, day).filter( (task: TaskType) => +task.id !== id), task];\r\n  return cal\r\n}\r\nconst fillTime = (t: string) => t ? new RegExp(':').test(t) ? delColon(t): t : `1${rand()[1]}00`\r\n// заполнение простой задачи в распорядок\r\nexport const simpleTaskFill = (taskArr: any[]): TaskType => ({\r\n  title: taskArr[0].value ? taskArr[0].value : 'title',\r\n  id: taskArr[1].value ? taskArr[1].value : rand(),\r\n  start: fillTime(taskArr[2].value),\r\n  end: fillTime(taskArr[3].value),\r\n  importance: taskArr[4].value ? taskArr[4].value : rand()[0],\r\n  exclusivity: taskArr[5].checked !== undefined ? taskArr[5].checked : false,\r\n  compressibility: taskArr[6].checked !== undefined ? taskArr[6].checked : false,\r\n  urgent: taskArr[7].checked !== undefined ? taskArr[7].checked : false,\r\n  movable: taskArr[8].checked !== undefined ? taskArr[8].checked : false\r\n  })\r\n// заполнение сложной задачи в распорядок\r\nexport const complTaskFill = (taskArr: any[]): ComplicatedTaskType => ({ \r\n  title: taskArr[0].value ? taskArr[0].value : 'title',\r\n  id: taskArr[1].value ? taskArr[1].value : rand(),\r\n  deadline: taskArr[2].data ? taskArr[2].data : [new Date().toString(), addDays(new Date(), 7).toString()],\r\n  importance: taskArr[3].value ? taskArr[3].value : rand()[0],\r\n  labour: taskArr[4].value ? taskArr[4].value : rand()[0],\r\n  exclusivity: taskArr[5].checked !== undefined ? taskArr[5].checked : false,\r\n  compressibility: taskArr[6].checked !== undefined ? taskArr[6].checked : false,\r\n  urgent: taskArr[7].checked !== undefined ? taskArr[7].checked : false,\r\n  movable: taskArr[8].checked !== undefined ? taskArr[8].checked : false,\r\n})\r\n// заполнение задачи в распорядок\r\nexport const buildTask = (complTask: ComplicatedTaskType, start: string, duration: string): TaskType => ({\r\n    title: complTask.title ? complTask.title : 'complTask name',\r\n    id: complTask.id ? complTask.id : rand(),\r\n    start: start ? start : `1${rand()[1]}00`,\r\n    end: start ? addTime(start, duration) : '2400',\r\n    exclusivity: complTask.exclusivity ? complTask.exclusivity : false,\r\n    compressibility: complTask.compressibility ? complTask.compressibility : false,\r\n    urgent: complTask.urgent ? complTask.urgent : false,\r\n    movable: complTask.movable ? complTask.movable : false,\r\n    importance: complTask.importance ? complTask.importance : rand()[0]  \r\n})\r\n\r\n// сдвиг задач в распорядке\r\nexport const compressGap = (arr: TaskType[]): TaskType[] => {                                                            \r\n  let newArr = []\r\n  for (let i = 0, len = arr.length; i < len; i++) {\r\n    newArr.push(arr[i])\r\n    if(i > 0 && arr[i].start !== arr[i - 1].end && arr[i].movable){\r\n      let durationTask = diffTime(arr[i].start, arr[i].end)\r\n      newArr[i].start = newArr[i - 1].end\r\n      newArr[i].end = addTime(arr[i - 1].end, durationTask)\r\n    } \r\n  }\r\n return newArr\r\n}\r\n// сдвиг задач в распорядке\r\nexport const compressTask = (arr: TaskType[], compressionRatio = 1): TaskType[] => {                                       \r\n  let newArr = []\r\n  for (let i = 0, len = arr.length; i < len; i++) {\r\n    newArr.push(arr[i])\r\n    let durationTask = demountTime( diffTime(arr[i].start, arr[i].end) )\r\n    if(i > 0 && arr[i].compressibility && durationTask > 10){\r\n      newArr[i].start = arr[i].start\r\n      newArr[i].end = addTime(arr[i].start, buildStringTime(Math.round(divTime(durationTask, compressionRatio, +arr[i].importance) ) ) ) \r\n    } \r\n  }\r\n return newArr\r\n}\r\n// поиск нужного ид в массиве\r\nconst findIdIndex = (arr: TaskType[], id: number): number => {\r\n  for (let i = 0, len = arr.length; i < len; i++) {\r\n    if(+arr[i].id === id) return i\r\n  }\r\n  return -1\r\n}\r\n// выбор задачи для записи в gap\r\nconst chooseTask = (taskArr: any[], gap: number, pastTaskId: number[]): any => taskArr\r\n  .filter(v => !~pastTaskId.indexOf(v.id) ).filter(v => v.dur < gap || v.dur === gap )[0]\r\n\r\ntype durationTaskShedule = {id: number, dur: number}\r\n// перемешивание задач в распорядке\r\nexport const moveTask = (arr: TaskType[]): TaskType[] => {\r\n  let temp = [] as TaskType[], result = [] as TaskType[], gapDurArr = [] as number[],\r\n  taskArr = [] as durationTaskShedule[], pastTaskId = [] as number[], tgtTask;\r\n  for (let i = 0, len = arr.length; i < len; i++) {\r\n    if(arr[i].movable){\r\n      temp.push(arr[i])\r\n    } else {\r\n      result.push(arr[i])\r\n    }\r\n  }\r\n  for (let i = 0, len = temp.length; i < len; i++) {\r\n    taskArr.push({id: +temp[i].id, dur: demountTime(diffTime(temp[i].start, temp[i].end) ) })\r\n  }\r\n  for (let i = 1, len = arr.length; i < len; i++) {\r\n      gapDurArr.push(demountTime(diffTime(arr[i - 1].end, arr[i].start) ) ) \r\n  }     \r\n  for (let i = 0, len = gapDurArr.length; i < len; i++) {\r\n    if(gapDurArr[i] && chooseTask(taskArr, gapDurArr[i], pastTaskId) ) {\r\n      tgtTask = chooseTask(taskArr, gapDurArr[i], pastTaskId)     \r\n      let task = temp[findIdIndex(temp, tgtTask.id)]\r\n      task.start = arr[i - 1].end \r\n      task.end = addTime(arr[i - 1].end, formLabourTime(tgtTask.dur) )\r\n      result.push(task)\r\n      pastTaskId.push(tgtTask.id)\r\n    }\r\n  }\r\n  return result\r\n}","import { InitialState as UIType } from './../store/reducer/ui'\r\nimport { InitialState as UXType } from './../store/reducer/ux'\r\nimport { InitialState as CoreType } from './../store/reducer/calendar'\r\nimport lg from '../lib/lg.json'\r\nexport const text = JSON.parse(lg)\r\nexport type Info = {\r\n  tempNumArr: number[]\r\n  lastDayTaskStart: string\r\n  dayFreeTime: GapTime[]\r\n  tempNum: number\r\n  dedlinePostponement: number\r\n  dateTrack: DateTrackType\r\n}\r\nexport const info: Info = {\r\n  tempNumArr: [],\r\n  lastDayTaskStart: '',\r\n  dayFreeTime: [],\r\n  tempNum: 0,\r\n  dedlinePostponement: 0,\r\n  dateTrack: {year: 0, month: 0, day: 0} \r\n}\r\nexport type TaskType = {\r\n  [key: string]: any\r\n  title: string,\r\n  id: string,\r\n  start: string,\r\n  end: string,\r\n  importance: string,\r\n  exclusivity: boolean,\r\n  compressibility: boolean,\r\n  urgent: boolean,\r\n  movable: boolean\r\n}\r\nexport type ComplicatedTaskType = {\r\n  title: string,\r\n  id: string,\r\n  deadline: string[],\r\n  importance: string,\r\n  exclusivity: boolean,\r\n  compressibility: boolean,\r\n  urgent: boolean,\r\n  movable: boolean,  \r\n  labour: string\r\n}\r\nexport type DateTrackType = {\r\n  [key: number]: any\r\n  year: number\r\n  month: number\r\n  day: number\r\n}\r\nexport type Settings = {\r\n  task: ComplicatedTaskType\r\n  calendar: any \r\n  ux: UXType \r\n  ui: UIType\r\n  info: Info\r\n}\r\nexport type Form = {\r\n  tag: string  \r\n  field: string\r\n  id: string\r\n  value: string\r\n  checked: boolean\r\n  data: any\r\n}\r\nexport type LocaleType = 'Ru'|'En'|'fr'|'es'|'de'|'zh'\r\nexport type GapTime = {start: string, duration: string}[]\r\nexport type ModalProps = {\r\n  ui: UIType\r\n  lang: LocaleType\r\n  core?: CoreType\r\n  inputText: (value: string, id: string) => void\r\n  setCheckBox: (checked: boolean, id: string) => void\r\n  inputDeadline?: (d_str: string[]) => void \r\n  remove?: (id?: number) => void\r\n}\r\nexport type NewTaskDate = {\r\n  start: Date\r\n  end: Date\r\n  duration: number\r\n  tasklabourPerDay: number\r\n}","import React, { FC } from \"react\"\r\nimport { Layout, Button} from \"antd\"\r\nimport { Dispatch } from 'redux'\r\nimport { connect } from 'react-redux'\r\nimport { sortByTime, changeID } from '../../../lib/tools'\r\nimport { default_weekdays, default_weekends } from '../../../lib/patterns'\r\nimport { simpleTaskFill } from '../../../lib/task_methods'\r\nimport { AppStateType, CoreActionsTypes } from '../../../store/store';\r\nimport { TaskType, LocaleType, Form, text } from '../../../types/data'\r\nimport { A_CAL } from '../../../store/actions/calendar'\r\nimport { A_UX } from '../../../store/actions/ux'\r\nimport { A_UI } from '../../../store/actions/ui'\r\ntype MapPropsFMC = {\r\n  weekdays: TaskType[]\r\n  weekends: TaskType[]\r\n  switcher: boolean\r\n  form: Form[]\r\n  lang: LocaleType\r\n}\r\ntype DispatchPropsFMC = {\r\n  setPattern: (weekdays: TaskType[], weekends: TaskType[]) => void\r\n  setWeekdays: (weekdays: TaskType[]) => void\r\n  setWeekends: (weekends: TaskType[]) => void\r\n  toggleMode: () => void\r\n}\r\nconst FooterMain: FC<MapPropsFMC & DispatchPropsFMC> = ({switcher, weekends, weekdays, form, lang, toggleMode, \r\n  setPattern, setWeekdays, setWeekends}) => {\r\n  const add = () => switcher ? \r\n  setWeekends(changeID(sortByTime([...weekends, simpleTaskFill(form)]))): \r\n  setWeekdays(changeID(sortByTime([...weekdays, simpleTaskFill(form)])));\r\n  const done = () => switcher ? setPattern(weekdays, weekends) : toggleMode()\r\n  return(\r\n  <Layout className=\"footer\">\r\n      <Button onClick={add}>{text[lang].add_task}</Button>\r\n      <Button onClick={done}>{text[lang].done}</Button>\r\n      <Button onClick={done}>{text[lang].return}</Button>\r\n  </Layout>\r\n  )\r\n}\r\nexport const FooterMainContainer = connect<MapPropsFMC, DispatchPropsFMC, {}, AppStateType>(\r\n  (state: AppStateType) => ({\r\n    weekdays: state.core.weekdays,\r\n    weekends: state.core.weekends,\r\n    switcher: state.ui.pattern_modal_mode,\r\n    form: state.ui.formEl,\r\n    lang: state.ux.lang\r\n  }),  \r\n  (dispatch: Dispatch<CoreActionsTypes>) => ({\r\n    toggleMode() {\r\n      dispatch(A_UI.toggleModePatternModal() )\r\n    },\r\n    setWeekdays(weekdays: TaskType[]) {\r\n      dispatch(A_CAL.setWeekdaysPattern(weekdays) )\r\n    },\r\n    setWeekends(weekends: TaskType[]) {\r\n      dispatch(A_CAL.setWeekendsPattern(weekends) )\r\n    },\r\n    setPattern(weekdays: TaskType[], weekends: TaskType[]){\r\n      weekdays.length ? dispatch(A_CAL.setWeekdaysPattern(weekdays) ) :  \r\n      dispatch(A_CAL.setWeekdaysPattern(default_weekdays) )                 // режим дня по умолчанию\r\n      weekends.length ? dispatch(A_CAL.setWeekendsPattern(weekends) ) :\r\n      dispatch(A_CAL.setWeekendsPattern(default_weekends) )                 // режим дня по умолчанию\r\n      dispatch(A_UI.togglePatternModal() )      \r\n      dispatch(A_UX.complFillPattern() )\r\n    }\r\n  })\r\n  )(FooterMain)","import React, { FC } from \"react\"\r\nimport { Layout, Button} from \"antd\"\r\nimport { Dispatch } from 'redux'\r\nimport { connect } from 'react-redux'\r\nimport { add_task, remove_task, edit_task, simpleTaskFill } from '../../../lib/task_methods'\r\nimport { rand } from '../../../lib/tools'\r\nimport { AppStateType, CoreActionsTypes } from '../../../store/store';\r\nimport { LocaleType, Form, DateTrackType, text } from '../../../types/data'\r\nimport { A_CAL } from '../../../store/actions/calendar'\r\nimport { A_UI } from '../../../store/actions/ui'\r\ntype MapPropsFSC = {\r\n  switcher: boolean\r\n  form: Form[]\r\n  lang: LocaleType\r\n  calendar: any\r\n  chosenDay: DateTrackType\r\n}\r\ntype DispatchPropsFSC = {\r\n  taskManage: (new_calend: any) => void\r\n  _toggleModal: () => void\r\n  cancelModal: () => void\r\n  _toggleModeModal: () => void\r\n  endEditTaskForm: () => void\r\n}\r\nexport const FooterShedule: FC<MapPropsFSC & DispatchPropsFSC> = ({switcher, form, lang, chosenDay, calendar, ...props}) => {  \r\n  const addSimpleTask = () => closeModalWith(add_task( calendar, chosenDay, simpleTaskFill(form) ) )  \r\n  const closeModalWith = (calendar: any) => {\r\n    props.taskManage(calendar)\r\n    props._toggleModal()\r\n    props.endEditTaskForm()\r\n  } \r\n  const finalEditTask = () => {\r\n    props.taskManage(remove_task(calendar, chosenDay, form[1].value && form[1].value ) )\r\n    closeModalWith(add_task(calendar, chosenDay, simpleTaskFill(form) ) )\r\n  }\r\n  const btnRemoveClick = (e: React.MouseEvent<HTMLElement>) => closeModalWith(remove_task(calendar, chosenDay, form[1].value && form[1].value ) )\r\n  if(switcher) {\r\n    return (\r\n      <Layout className=\"footer\">\r\n            <Button onClick={addSimpleTask}>{text[lang].add_task}</Button>\r\n            <Button onClick={props.cancelModal}>{text[lang].return}</Button>\r\n      </Layout>\r\n    )\r\n  } else {\r\n    return (\r\n      <Layout className=\"footer\">\r\n        <Button onClick={props.cancelModal}>{text[lang].return}</Button>\r\n        <Button onClick={finalEditTask}>{text[lang].edit}</Button>\r\n        <Button onClick={btnRemoveClick}>{text[lang].delete}</Button>\r\n      </Layout>\r\n    )\r\n  }   \r\n}\r\nexport const FooterSheduleContainer = connect<MapPropsFSC, DispatchPropsFSC, {}, AppStateType>(\r\n  (state: AppStateType) => ({\r\n    calendar: state.core.calendar,\r\n    chosenDay: state.core.chosenDay, \r\n    switcher: state.ui.modal_AS_mode,\r\n    form: state.ui.formEl,\r\n    lang: state.ux.lang\r\n  }),  \r\n  (dispatch: Dispatch<CoreActionsTypes>) => ({\r\n    taskManage(new_calend: any) {\r\n      dispatch(A_CAL.manageSimpleTask(new_calend) )\r\n    },\r\n    _toggleModal() {     \r\n      dispatch(A_UI.toggleModalAST() )\r\n    },\r\n    cancelModal() {\r\n      dispatch(A_UI.cancelModalAST() )\r\n    },\r\n    _toggleModeModal() {     \r\n      dispatch(A_UI.toggleModeModalAST() )\r\n    },\r\n    endEditTaskForm() {\r\n      dispatch(A_UI.endEditTaskForm() )\r\n    }\r\n  })\r\n  )(FooterShedule)","import { compressGap, compressTask, moveTask, buildTask } from './task_methods'\r\nimport { detailFreeTime, time_estimate, defineTaskStart, demountTime, formLabourTime } from './time_methods'\r\nimport { months, prepareDate, addDays, buildIterDate, defineNewTaskDate } from './date_methods'\r\nimport { TaskType, Settings, GapTime } from '../types/data'\r\n/*\r\nconst dayTimeCheck = compose(\r\n  moveTask,\r\n  compressTask,\r\n  time_estimate\r\n)\r\n*/\r\nconst universalCalendarMiddleWare = (set: Settings, func: (cal: any, set: Settings) => void): Settings => {\r\n  let d = prepareDate(set.task.deadline)\r\n  let now = d.start\r\n  set.info.tempNum = 0\r\n  set.info.tempNumArr = []\r\n  set.info.dayFreeTime = []\r\n  for (let i = -1, len = d.duration-1; i < len; i++) {\r\n    now = addDays(now, 1)\r\n    let DATE = set.info.dateTrack = buildIterDate(now)   \r\n    func(set.calendar[DATE.year][months[DATE.month]][DATE.day], set)\r\n  }\r\n  return set\r\n}\r\nconst runDysplaySchedule = (schedule: TaskType[], set: Settings) => {\r\n  set.info.dayFreeTime = [...set.info.dayFreeTime, detailFreeTime(schedule)]\r\n  return set\r\n}\r\nexport const FillTaskInIterDay = (set: Settings): any => {\r\n  const { info } = set\r\n  let d = defineNewTaskDate(set), now = addDays(d.start, -1), DATE, iterDay, taskStart, lastTime, freePeriods: GapTime\r\n  info.lastDayTaskStart = ''\r\n  for (let i = 0, len = d.duration; i < len; i++) {\r\n    now = addDays(now, 1)\r\n    DATE = info.dateTrack = buildIterDate(now)\r\n    freePeriods = info.dayFreeTime[i].filter(time => demountTime(time.duration) > d.tasklabourPerDay)\r\n    iterDay = set.calendar[DATE.year][months[DATE.month]][DATE.day]\r\n    if(freePeriods.length) {\r\n      lastTime = info.lastDayTaskStart ? info.lastDayTaskStart: freePeriods[0].start\r\n      taskStart = freePeriods[defineTaskStart(freePeriods, lastTime)].start\r\n    } else {\r\n      iterDay = time_estimate(compressTask(moveTask(iterDay))) > time_estimate(compressTask(compressGap(iterDay))) ? \r\n      compressTask(moveTask(iterDay)) : compressTask(compressGap(iterDay))\r\n      freePeriods = detailFreeTime(iterDay).filter(time => demountTime(time.duration) > d.tasklabourPerDay)\r\n      lastTime = info.lastDayTaskStart ? info.lastDayTaskStart: freePeriods[0].start\r\n      taskStart = freePeriods[defineTaskStart(freePeriods, lastTime)].start\r\n    }\r\n    info.lastDayTaskStart = taskStart    \r\n    set.calendar[DATE.year][months[DATE.month]][DATE.day] = [...iterDay, \r\n      buildTask(set.task, taskStart, formLabourTime(d.tasklabourPerDay) ) ]\r\n  }  \r\n  return set.calendar\r\n}\r\n/*\r\nconst runDecreaseTaskLabour = (schedule: TaskType[], set: Settings) => {\r\n  if(typeof detail_estimate(schedule) === 'object') {\r\n    let maxGap = Math.max(...detail_estimate(schedule).map(v => +v) )\r\n    set.info.tempNum = set.info.tempNum + maxGap / 100\r\n    set.task.labour = Math.round(set.info.tempNum).toString()\r\n    set.info.console = 'done_decrease_task_labour'\r\n  }\r\n}\r\nconst runIncreaseFreeTime = (schedule: TaskType[], set: Settings): void => {\r\n  const runExcludeTask = (arr:  TaskType[]) => set.ux.aggressivenessExclude ? arr.filter(task => task.exclusivity === false) : arr,\r\n  runCompressTask = (arr:  TaskType[]) => set.ux.aggressivenessSqueezing ? compressTask(arr, set.ux.compressionRatio) : arr,\r\n  runCompressGap = (arr:  TaskType[]) => set.ux.aggressivenessSqueezing ? compressGap(arr) : arr,\r\n  runmoveTask = (arr:  TaskType[]) => set.ux.aggressivenessPermutation ? moveTask(arr) : arr\r\n  set.calendar[set.info.dateTrack.year][months[set.info.dateTrack.month]][set.info.dateTrack.day] = \r\n  runmoveTask(runCompressGap(runCompressTask(runExcludeTask(schedule) ) ) )\r\n  if(set.info.console !== 'done_increase_task_labour') {\r\n    set.info.console = 'done_increase_task_labour'\r\n  }\r\n}\r\n// заполнение периодов с одинаковым времением начала\r\nconst runSameStartFlood = (schedule: TaskType[], set: Settings): void => {\r\n  const date = set.info.dateTrack\r\n  let start = detail_estimate(schedule)\r\n      .map(period => markStartFreeTime(schedule, period) )\r\n      .map(time => ({time, dif: diffTime(set.info.tempNum.toString(), time)}))\r\n      .sort( (difObjA, difObjB) => +difObjA.dif - +difObjB.dif)[0]\r\n  //set.info.tempNum = start\r\n  let tempInjectTask = buildTask(set.task, start.time, set.task.labour)\r\n  set.calendar[date.year][months[date.month]][date.day] = [...schedule, tempInjectTask]\r\n  //set.info.console = 'CE'\r\n}\r\n// заполнение задачи в самый длинный свободный период дня\r\nconst runAccumFlood = (schedule: TaskType[], set: Settings): void => {\r\n  const date = set.info.dateTrack\r\n  const maxFreePeriod = formTime(Math.max(...detail_estimate(schedule).map(v => +v) ).toString() )  \r\n  const start = markStartFreeTime(schedule, maxFreePeriod)\r\n  set.info.tempNum = set.info.tempNum + +maxFreePeriod\r\n  set.calendar[date.year][months[date.month]][date.day] = +set.task.labour - set.info.tempNum > 0 ? \r\n  [...schedule, buildTask(set.task, start, maxFreePeriod)] : schedule\r\n  set.info.console = 'CE'\r\n}\r\nconst runSplitFlood = (schedule: TaskType[], set: Settings): void => {\r\n  const date = set.info.dateTrack\r\n  let periods: string[] = detail_estimate(schedule).sort( (a: string, b: string) => demountTime(a) - demountTime(b) ) \r\n  periods.length = 2 //why?\r\n  let startArr: string[] = periods.map(period => markStartFreeTime(schedule, period) )\r\n  set.info.tempNum = set.info.tempNum + periods.map(v => +v).reduce((acc, cur) => acc + cur)\r\n  set.calendar[date.year][months[+date.month]][date.day] = +set.task.labour - set.info.tempNum > 0 ? \r\n  [...schedule, ...startArr.map( (start, i) => buildTask(set.task, start, periods[i] ) )] : schedule\r\n  set.info.console = 'CE'\r\n}\r\n*/\r\nexport const dysplaySchedule = (setting: Settings) => universalCalendarMiddleWare(setting, runDysplaySchedule)\r\n/*\r\nexport const increaseFreeTime = (setting: Settings) => universalCalendarMiddleWare(setting, runIncreaseFreeTime)\r\nexport const decreaseTaskLabour = (setting: Settings) => universalCalendarMiddleWare(setting, runDecreaseTaskLabour)\r\nexport const floodSchedule = (setting: Settings) => universalCalendarMiddleWare(setting, runFloodSchedule)\r\nexport const sameStartFlood = (setting: Settings) => universalCalendarMiddleWare(setting, runSameStartFlood)\r\nexport const accumFlood = (setting: Settings) => universalCalendarMiddleWare(setting, runAccumFlood)\r\nexport const splitFlood = (setting: Settings) => universalCalendarMiddleWare(setting, runSplitFlood)\r\n*/","import React, { FC } from \"react\"\r\nimport { Layout, Button} from \"antd\"\r\nimport { Dispatch } from 'redux'\r\nimport { connect } from 'react-redux'\r\nimport { complTaskFill } from '../../../lib/task_methods'\r\nimport { checkFreeTime, checkMaxFreeTime } from '../../../lib/date_methods'\r\nimport { FillTaskInIterDay, dysplaySchedule } from '../../../lib/middleware'\r\nimport { AppStateType, CoreActionsTypes } from '../../../store/store'\r\nimport { TaskType, LocaleType, Form, DateTrackType, ComplicatedTaskType, Settings, text, GapTime, info } from '../../../types/data'\r\nimport { A_CAL } from '../../../store/actions/calendar'\r\nimport { A_UI } from '../../../store/actions/ui'\r\nimport { InitialState as UIType } from './../../../store/reducer/ui'\r\nimport { InitialState as UXType } from './../../../store/reducer/ux'\r\n\r\ntype MapPropsFCC = {\r\n  calendar: any\r\n  tasks: ComplicatedTaskType[]\r\n  ux: UXType\r\n  ui: UIType\r\n}\r\ntype DispatchPropsFCC = {\r\n  _add: (task: ComplicatedTaskType) => void\r\n  _remove: (id: string) => void\r\n  _cancel: () => void\r\n  _toggle: () => void\r\n  endEditTaskForm: () => void\r\n  runEstimateTask: (set: Settings) => void\r\n}\r\n\r\nconst FooterCompl: FC<MapPropsFCC & DispatchPropsFCC> = ({calendar, tasks, ui, ux, ...props}) => {\r\n  const finalize = (func: (arg: any) => void, arg: any) => {\r\n    func(arg)\r\n    props._toggle()\r\n    props.endEditTaskForm()\r\n  } \r\n  const addCompl = () => finalize(props._add, complTaskFill(ui.formEl) )\r\n  const removeComplTask = (): void => finalize(props._remove, ui.formEl[1].value)  \r\n  const finalEdit = (): void => finalize(props._add, complTaskFill(ui.formEl) )\r\n  const estimate = (): void => {\r\n    const set = {task: complTaskFill(ui.formEl), calendar, ui, ux, info}\r\n    props._remove(ui.formEl[1].value)\r\n    props.runEstimateTask(set)\r\n    props._toggle()\r\n  }  \r\n  const btnRemoveClick = (e: React.MouseEvent<HTMLElement>) => removeComplTask()\r\n  if(ui.modal_ACT_mode) {\r\n    return (\r\n      <Layout className=\"footer\">\r\n            <Button onClick={addCompl}>{text[ux.lang].add}</Button>\r\n            <Button onClick={props._cancel}>{text[ux.lang].return}</Button>\r\n      </Layout>\r\n    )\r\n  } else {\r\n    return (\r\n      <Layout className=\"footer\">\r\n        <Button onClick={estimate}>{text[ux.lang].estimate}</Button>\r\n        <Button onClick={props._cancel}>{text[ux.lang].return}</Button>\r\n        <Button onClick={finalEdit}>{text[ux.lang].edit}</Button>\r\n        <Button onClick={btnRemoveClick}>{text[ux.lang].delete}</Button>\r\n      </Layout>\r\n    )\r\n  }   \r\n}\r\nexport const FooterComplContainer = connect<MapPropsFCC, DispatchPropsFCC, {}, AppStateType>(\r\n  (state: AppStateType) => ({\r\n    calendar: state.core.calendar,\r\n      tasks: state.core.tasks,\r\n      ui: state.ui,\r\n      ux: state.ux\r\n  }),  \r\n  (dispatch: Dispatch<CoreActionsTypes>) => ({\r\n    _add(task: ComplicatedTaskType) {\r\n      dispatch(A_CAL.addComplicatedTask(task) )\r\n    },   \r\n    runEstimateTask(set: Settings) {\r\n      checkMaxFreeTime(set) && dispatch(A_CAL.manageSimpleTask(FillTaskInIterDay(dysplaySchedule(set))) )\r\n    },\r\n    _remove(id: string) {\r\n      dispatch(A_CAL.removeComplicatedTask(id) )\r\n    },\r\n    _toggle() {\r\n      dispatch(A_UI.toggleModalACT() )\r\n    },\r\n    _cancel() {\r\n      dispatch(A_UI.cancelModalACT() )\r\n    },\r\n    endEditTaskForm() {\r\n      dispatch(A_UI.endEditTaskForm() )\r\n    }\r\n  })\r\n  )(FooterCompl)\r\n\r\n","import React, { FC, Fragment } from \"react\"\r\nimport cn from 'classnames'\r\nimport { Layout, Modal, Input, Checkbox, Tooltip, DatePicker, Menu } from \"antd\"\r\nimport { CheckboxChangeEvent } from 'antd/lib/checkbox'\r\nimport { RangePickerPresetRange } from 'antd/lib/date-picker/interface'\r\nimport { FooterMainContainer } from './modalFooterContainers/FooterMainContainer'\r\nimport { FooterSheduleContainer } from './modalFooterContainers/FooterSheduleContainer'\r\nimport { FooterComplContainer } from './modalFooterContainers/FooterComplContainer'\r\nimport { number_validation, string_validation, date_validation } from '../../lib/validation'\r\nimport { schedule_render } from '../../lib/date_methods'\r\nimport { InitialState as UIType } from './../../store/reducer/ui'\r\nimport { insertColon } from \"../../lib/tools\"\r\nimport './taskForm.less'\r\nimport { Form, ModalProps, LocaleType, text } from '../../types/data'\r\nconst { RangePicker } = DatePicker\r\n//import locale from 'antd/es/date-picker/locale/zh_CN';\r\nconst ModalTaskForm: FC<ModalProps> = ({ui, lang, inputText, setCheckBox, inputDeadline, ...props}) => {\r\n  const {modal_AS_visible: sw3, modal_AS_mode: sw4, modal_ACT_visible: sw5, modal_ACT_mode: sw6, \r\n         pattern_modal_visible: sw7, pattern_modal_mode: sw8, modalType} = ui\r\n  const modal_container = cn({'modal': modalType !== '1', 'start_modal': modalType === '1'})\r\n  const modal_input = cn({'modal-input': modalType !== '1', 'start-modal-input': modalType === '1'})\r\n  const modal_list = cn({'modal_list': modalType !== '1', 'start_modal_list': modalType === '1'})\r\n  const inputDate = (date: RangePickerPresetRange, d_str: string[]): void => inputDeadline && inputDeadline(d_str)\r\n  const inputTask = (e: React.ChangeEvent<HTMLInputElement>): void => {\r\n    const {value, id}: {value: string, id: string} = e.currentTarget\r\n    inputText(value, id)\r\n  }  \r\n  const checkTask = (e: CheckboxChangeEvent): void => {\r\n    const {checked, id}: {checked: boolean, id?: string} = e.target\r\n    id && setCheckBox(checked, id)\r\n  }\r\n  const getTitleModal = (ui: UIType, modalType: string, lang: LocaleType) => {\r\n    switch(modalType){\r\n      case '1': return sw8 ? text[lang].weekends : text[lang].weekdays\r\n      case '2': return sw4 ? text[lang].modal_title : text[lang].edit_task\r\n      case '3': return sw6 ? text[lang].modal_title : text[lang].edit_task\r\n      default: return 'Unknown modalType'\r\n    }\r\n  }\r\n  const getVisibleModal = (modalType: string) => {\r\n    switch(modalType){\r\n      case '1': return sw7\r\n      case '2': return sw3\r\n      case '3': return sw5\r\n      default: return false\r\n    }\r\n  }\r\n  const validationInput = (str: string) => {    \r\n    if(~['labour', 'importance'].indexOf(str)){\r\n      return number_validation(str) ? str: `${text[lang][str]} ${text[lang].wrong}`\r\n    } else if(~['time'].indexOf(str)) {\r\n      if(props.core) {\r\n        return date_validation(str, schedule_render(props.core.chosenDay, props.core.calendar)) ? str: `${text[lang][str]} ${text[lang].wrong}`\r\n      } else {\r\n        return str\r\n      }\r\n    } else {\r\n      return string_validation(str) ? str: `${text[lang][str]} ${text[lang].wrong}`\r\n    }\r\n  }\r\n  const buildFormElementFrom = (el: Form) => {\r\n    let isTime = el.field === 'start'||el.field === 'end'\r\n    switch(el.tag){\r\n      case 'input': return <Tooltip\r\n                            trigger='focus'\r\n                            title={validationInput(el.field)}\r\n                            placement=\"topLeft\"\r\n                            overlayClassName={`${el.field}-input`}\r\n                            key={el.id}>\r\n                           <Input addonBefore={text[lang][el.field]} type={isTime ? 'time' : ''}\r\n                            onChange={inputTask} id={el.id} className='input' size='large'\r\n                            placeholder={text[lang].insert+' '+text[lang][el.field]}\r\n                            value={isTime ? insertColon(el.value) : el.value} />\r\n                           </Tooltip>\r\n      case 'checkbox': return <Checkbox onChange={checkTask} id={el.id} key={el.id} checked={el.checked}>                                  \r\n                                {text[lang][el.field]}\r\n                              </Checkbox>\r\n      case 'data-picker': return <Fragment key={el.id}>\r\n        <DatePicker showTime id={el.id} placeholder={text[lang].dedline} disabled={true} /><br />\r\n                                    <RangePicker\r\n                                      showTime={{format: 'HH:mm'}}\r\n                                      format=\"YYYY-MM-DD HH:mm\"\r\n                                      placeholder={[text[lang].cal_start, text[lang].cal_end]}\r\n                                      onChange={inputDate}/>\r\n                                  </Fragment>\r\n      default: return <p>Error: el tag undefined!</p>\r\n    }\r\n  }\r\n  return(\r\n    <Modal\r\n      closable={false}\r\n      title={getTitleModal(ui, modalType, lang)} \r\n      visible={getVisibleModal(modalType)}\r\n      footer={modalType === '1'? <FooterMainContainer /> :  \r\n      modalType === '2' ? <FooterSheduleContainer /> : <FooterComplContainer />}\r\n      centered={true}>\r\n        <Layout className={modal_container}>\r\n          <Layout className={modal_input}>\r\n            {ui.formEl.map((el: Form) => buildFormElementFrom(el))}\r\n          </Layout>\r\n           <Layout className={modal_list}>\r\n              {sw7 && props.core && <Menu theme='dark' mode=\"inline\">                \r\n                        {props.core[sw8 ? 'weekends': 'weekdays'].length ? \r\n                        props.core[sw8 ? 'weekends': 'weekdays'].map(item=>\r\n                        <Menu.Item key={item.id} style={{ borderRadius: \"0 5px 5px 0\" }} \r\n                          onClick={() => props.remove && props.remove(+item.id)}>        \r\n                          <span>{`${item.title.toUpperCase()} Start: ${insertColon(item.start)}`}</span>\r\n                        </Menu.Item>) : <Menu.Item>{text[lang].no_entries}</Menu.Item>}\r\n                </Menu>} \r\n            </Layout>\r\n        </Layout>\r\n    </Modal>\r\n  )\r\n}\r\nexport default ModalTaskForm\r\n","import { delColon } from './tools';\r\nimport { TaskType } from './../types/data';\r\nimport { detailFreeTime, defineTaskStart, diffTime, formLabourTime, addTime } from './time_methods'\r\n\r\nexport const date_validation = (str: string, schedule: TaskType[]): boolean => {\r\n  const reg = /^([0-9]|0[0-9]|1[0-9]|2[0-3]):[0-5][0-9]/;\r\n  const freeTime = detailFreeTime(schedule)\r\n  const nearestPeriod = defineTaskStart(freeTime, delColon(str) )\r\n  const endNearestPeriod = addTime(freeTime[nearestPeriod].start, formLabourTime(+freeTime[nearestPeriod].duration))\r\n  const enougthTime = diffTime(freeTime[nearestPeriod].start, delColon(str)) < \r\n  diffTime(freeTime[nearestPeriod].start, endNearestPeriod)\r\n  return reg.test(str) && enougthTime\r\n}\r\nexport const number_validation = (str: string): boolean => {\r\n  const reg = /^-?(0|[1-9][0-9]*)(\\.[0-9]*)?$/;\r\n  return ((!isNaN(+str) && reg.test(str)) || str === '' || str === '-') \r\n}\r\n\r\nexport const string_validation = (str: string): boolean => {\r\n  const reg = /^[a-zA-Z0-9]+$/;\r\n  return ((!isNaN(+str) && reg.test(str))) \r\n}\r\n\r\nexport const ID_validation = (id:number, arr: any[]): boolean => arr.map(item => item.id === id).length ? true : false\r\n\r\n\r\n","import React, { FC } from 'react'\r\nimport { Layout, Menu, Button } from \"antd\";\r\nimport Timeline from '../Timeline/Timeline'\r\nimport TaskForm from '../ModalWindow/TaskForm'\r\nimport { schedule_render } from '../../lib/date_methods'\r\nimport { prep_data_timeline, formateDate, clock, time_estimate } from '../../lib/time_methods'\r\nimport { cloneDeep, insertColon } from '../../lib/tools'\r\nimport { InitialState as UXType } from './../../store/reducer/ux'\r\nimport { InitialState as UIType } from './../../store/reducer/ui'\r\n//import './Schedule.less'\r\nimport './index.css'\r\nimport { TaskType, DateTrackType, text } from '../../types/data';\r\nexport type MapPropsType = {\r\n  calendar: any\r\n  chosenDay: DateTrackType\r\n  schedule: TaskType[]\r\n  ux: UXType\r\n  ui: UIType\r\n}\r\nexport type DispatchPropsType = {\r\n  taskManage: (new_calend: any) => void\r\n  _toggleModal: () => void\r\n  _toggleModeModal: () => void\r\n  changeFieldsValue: (id: string, value: string) => void \r\n  changeCheckBox: (id: string, checked: boolean) => void\r\n  setSimpleTaskForm: (task: TaskType) => void  \r\n}\r\nconst Schedule: FC<MapPropsType & DispatchPropsType> = ({calendar, chosenDay, ui, ux, ...props}) => {\r\n  const autoToggleModal = (bool: boolean): void => {    \r\n    if(ui.modal_AS_mode === bool){\r\n      props._toggleModal()\r\n    } else {\r\n      props._toggleModeModal() \r\n      props._toggleModal();\r\n    }\r\n  }\r\n  const edit = (id: string) => {\r\n    props.setSimpleTaskForm(schedule_render(chosenDay, calendar).filter(chosedTask => chosedTask.id === id)[0])\r\n    autoToggleModal(false)\r\n  }\r\n  const inputText = (value: string, id: string) => props.changeFieldsValue(id, value)\r\n  const setCheckBox = (checked: boolean, id: string) => props.changeCheckBox(id, checked)\r\n  const startAdd = () => {\r\n    autoToggleModal(true)\r\n  }\r\n  //chosenDay.day && console.log(time_estimate(schedule_render(chosenDay, calendar)))\r\n  return(\r\n    <Layout>\r\n      <Button onClick={startAdd}>{text[ux.lang].add_task}</Button>\r\n      <TaskForm      \r\n        ui={ui}\r\n        lang={ux.lang}\r\n        inputText={inputText}\r\n        setCheckBox={setCheckBox}\r\n        //remove={removeTask}\r\n      />\r\n      <Menu theme='dark' mode=\"inline\">                \r\n        { props.schedule.length ? schedule_render(chosenDay, calendar).map(item =>\r\n          <Menu.Item key={item.id} style={{ borderRadius: \"0 5px 5px 0\" }}\r\n             onClick={() => edit(item.id)}>        \r\n             <span>{item.title.toUpperCase() + \r\n            new Array(20).fill(String.fromCharCode(+'0160')).join('') +\r\n              ' Start: '+ insertColon(item.start) + ' End: '+ insertColon(item.end)}</span>\r\n          </Menu.Item>) : <Menu.Item>{text[ux.lang].no_entries}</Menu.Item> }\r\n          { props.schedule.length ? \r\n          <Timeline \r\n              name={formateDate(ux.lang) + '  ' + clock()}\r\n              data={schedule_render(chosenDay, calendar) ? \r\n              prep_data_timeline(cloneDeep(schedule_render(chosenDay, calendar)) ) : []}\r\n            /> : <p>NO data</p> }\r\n      </Menu>\r\n    </Layout>\r\n  )\r\n}\r\nexport default Schedule","import {connect} from 'react-redux'\r\nimport { A_CAL } from '../../store/actions/calendar'\r\nimport { A_UI } from '../../store/actions/ui'\r\nimport Schedule from './Schedule'\r\nimport { Dispatch } from 'redux'\r\nimport { MapPropsType, DispatchPropsType } from './Schedule';\r\nimport { AppStateType, CoreActionsTypes } from '../../store/store';\r\nimport { TaskType } from '../../types/data';\r\n\r\nconst StoredSchedule = connect<MapPropsType, DispatchPropsType, {}, AppStateType>(\r\n  (state: AppStateType) => ({    \r\n    ui: state.ui,\r\n    ux: state.ux,\r\n    calendar: state.core.calendar, \r\n    chosenDay: state.core.chosenDay, \r\n    schedule: state.core.schedule\r\n  }),  \r\n  (dispatch: Dispatch<CoreActionsTypes>) => ({\r\n    taskManage(new_calend: any) {\r\n      dispatch(A_CAL.manageSimpleTask(new_calend) )\r\n    },\r\n    _toggleModal() {     \r\n      dispatch(A_UI.toggleModalAST() )\r\n    },    \r\n    _toggleModeModal() {     \r\n      dispatch(A_UI.toggleModeModalAST() )\r\n    }, \r\n    changeFieldsValue(id: string, value: string) {\r\n      dispatch(A_UI.changeFieldsValue(id, value) )\r\n    },\r\n    changeCheckBox(id: string, checked: boolean) {\r\n      dispatch(A_UI.changeCheckBox(id, checked) )\r\n    },\r\n    setSimpleTaskForm(task: TaskType) {\r\n      dispatch(A_UI.setSimpleTaskForm(task) )\r\n    }\r\n  })\r\n  )(Schedule);\r\n       \r\nexport default StoredSchedule\r\n\r\n","import React, { FC } from 'react';\r\nimport { Layout, Button, Modal } from 'antd';\r\nimport { Informer } from '../Informer/Informer'\r\n\r\nexport type InformerProps = {\r\n  /*  getDesidion: (val: number) => void\r\n  setPeriod: (period: number) => void*/\r\n  lang: string\r\n  periods: any[]\r\n  visible: boolean//ui.info_modal_visible\r\n  toggle: () => void\r\n}\r\n\r\nconst ModalInformer: FC<InformerProps> = ({lang, periods, visible, toggle}) => {\r\n  return(<Layout></Layout>\r\n    /*\r\n    <Modal\r\n          title={text[lang][info.console]} \r\n          visible={visible}\r\n          centered={true}\r\n          onCancel={toggle}\r\n          footer={             \r\n         <Layout className=\"footer\">\r\n                <Button onClick={toggle}>{text[lang].add}</Button>\r\n                <Button onClick={toggle}>{text[lang].return}</Button>\r\n        </Layout>}\r\n        >\r\n          <Informer \r\n            lg={lang} \r\n            text={text} \r\n            info={info} \r\n            setPeriod={setPeriod} \r\n            getDesidion={getDesidion} \r\n            periods={[]} />          \r\n    </Modal>\r\n    */\r\n  )\r\n}\r\nexport default ModalInformer","import React, { FC } from \"react\"\r\nimport { Layout, Menu, Button } from \"antd\"\r\nimport ModalInformer from '../ModalWindow/ModalInformer'\r\nimport TaskForm from '../ModalWindow/TaskForm'\r\nimport { ComplicatedTaskType, LocaleType, text } from './../../types/data'\r\nimport { InitialState as UIType } from './../../store/reducer/ui'\r\nimport { InitialState as UXType } from './../../store/reducer/ux'\r\nimport './ComplicatedTasks.less'\r\n\r\nexport type MapProps = {\r\n  calendar: any\r\n  tasks: ComplicatedTaskType[]\r\n  lang: LocaleType\r\n  ui: UIType\r\n  ux: UXType\r\n}\r\nexport type DispatchProps = {\r\n  _remove: (id: string) => void\r\n  _toggle: () => void\r\n  _toggleMode: () => void\r\n  _toggleInfoModal: () => void\r\n  changeFieldsValue: (id: string, value: string) => void\r\n  changeCheckBox: (id: string, checked: boolean) => void\r\n  changeData: (data: any[]) => void\r\n  setComplicatedTaskForm: (task: ComplicatedTaskType) => void\r\n}\r\nconst ComplicatedTasks: FC<MapProps & DispatchProps> = ({calendar, tasks, lang, ui, ux, ...props}) => {  \r\n  const autoToggleModal = (booline: boolean): void => {    \r\n    if(ui.modal_ACT_mode === booline) {\r\n      props._toggle()\r\n    } else {\r\n      props._toggleMode(); \r\n      props._toggle();\r\n    }\r\n  }\r\n  const edit = (id: string): void => {\r\n    props.setComplicatedTaskForm(tasks.filter(chosedTask => chosedTask.id === id)[0])\r\n    props._remove(id)\r\n    autoToggleModal(false)\r\n  }  \r\n  const inputText = (value: string, id: string) => props.changeFieldsValue(id, value)\r\n  const inputDeadline = (deadline: string[]) => props.changeData(deadline)\r\n  const setCheckBox = (checked: boolean, id: string) => props.changeCheckBox(id, checked)\r\n    return (\r\n      <Layout>\r\n        <Button onClick={()=>autoToggleModal(true)}>{text[lang].add_compl}</Button>\r\n        <TaskForm\r\n        ui={ui} lang={lang}\r\n          inputText={inputText}\r\n          setCheckBox={setCheckBox} \r\n          inputDeadline={inputDeadline}\r\n          //remove={removeCompl}\r\n        />\r\n        <ModalInformer\r\n          visible={ui.info_modal_visible}\r\n          lang={lang} \r\n          toggle={props._toggleInfoModal}\r\n          periods={[]} \r\n        />\r\n        <Layout>\r\n          <Menu theme='dark' mode=\"inline\">                \r\n          {tasks.length > 0 ? tasks.map((item: ComplicatedTaskType) =>\r\n              <Menu.Item key={item.id} style={{ borderRadius: \"0 5px 5px 0\" }} onClick={() => edit(item.id)}>        \r\n                 <span>{item.title.toUpperCase()}</span>\r\n              </Menu.Item>) : <p>{text[lang].no_entries}</p>}\r\n          </Menu>\r\n        </Layout>\r\n    </Layout>\r\n    )\r\n  }\r\nexport default ComplicatedTasks","\r\nimport { Dispatch } from 'redux'\r\nimport ComplicatedTasks, { MapProps, DispatchProps} from './ComplicatedTasks'\r\nimport { AppStateType, CoreActionsTypes } from '../../store/store';\r\nimport { ComplicatedTaskType } from '../../types/data';\r\nimport { connect } from 'react-redux'\r\nimport { A_CAL } from '../../store/actions/calendar'\r\nimport { A_UI } from '../../store/actions/ui'\r\n\r\nconst StoredComplTasks = connect<MapProps, DispatchProps, {}, AppStateType>(\r\n  (state: AppStateType) => ({\r\n      calendar: state.core.calendar,\r\n      tasks: state.core.tasks,\r\n      lang: state.ux.lang,\r\n      ui: state.ui,\r\n      ux: state.ux\r\n  }),  \r\n  (dispatch: Dispatch<CoreActionsTypes>) => ({\r\n    _remove(id: string) {\r\n      dispatch(A_CAL.removeComplicatedTask(id) )\r\n    },\r\n    _toggle() {\r\n      dispatch(A_UI.toggleModalACT() )\r\n    },\r\n    _toggleMode() {\r\n      dispatch(A_UI.toggleModeModalACT() )\r\n    },\r\n    _toggleInfoModal() {\r\n      dispatch(A_UI.toggleInfoModal() )\r\n    },\r\n    changeData(data: any[]) {\r\n      dispatch(A_UI.changeData(data) )\r\n    },\r\n    changeFieldsValue(id: string, value: string) {\r\n      dispatch(A_UI.changeFieldsValue(id, value) )\r\n    },\r\n    changeCheckBox(id: string, checked: boolean) {\r\n      dispatch(A_UI.changeCheckBox(id, checked) )\r\n    },\r\n    setComplicatedTaskForm(task: ComplicatedTaskType) {\r\n      dispatch(A_UI.setComplicatedTaskForm(task) )\r\n    }\r\n  })\r\n  )(ComplicatedTasks)\r\n   \r\nexport default StoredComplTasks","import React from 'react';\r\nimport { Layout, Table} from \"antd\";\r\n\r\nconst Statistic = ({store}) => {\r\nconst columns = [\r\n  { title: 'Title', dataIndex: 'title', key: 'title' },\r\n  { title: 'Id', dataIndex: 'id', key: 'id' },\r\n  { title: 'Labour', dataIndex: 'labour', key: 'labour' },\r\n  { title: 'Age', dataIndex: 'age', key: 'age' },\r\n  { title: 'Remaind', dataIndex: 'remaind', key: 'remaind' },\r\n]\r\nconst data = store.core.tasks\r\n  return(\r\n    <Layout>\r\n      <Table\r\n        columns={columns}\r\n        expandedRowRender={record => <p style={{ margin: 0 }}>{record.importance}</p>}\r\n        dataSource={data}\r\n      />\r\n    </Layout>\r\n  )\r\n}\r\nexport default Statistic","import {connect} from 'react-redux'\r\nimport { A_STAT } from '../actions/calendar'\r\nimport { A_UI } from '../actions/ui'\r\nimport Statistic from '../../components/Statistic/Statistic'\r\n\r\nconst StoreStat = connect(\r\n\r\n  state => ({\r\n    store: state\r\n  }), \r\n  \r\n  dispatch => ({\r\n    toggleModal() {     \r\n      dispatch(A_UI.toggleModalAST() )\r\n    },\r\n    cancelModal() {     \r\n      dispatch(A_UI.cancelModalAST() )\r\n    },\r\n    _toggleModeModal() {     \r\n      dispatch(A_UI.toggleModeModalAST() )\r\n    },\r\n  })\r\n  )(Statistic);\r\n\r\n  \r\nexport default StoreStat","import React from 'react'\r\nimport { Layout, Button } from \"antd\"\r\nimport { fill_calendar } from '../../lib/date_methods'\r\n\r\nconst PatternPreference = ({_setCalendar}) => (\r\n    <Layout>\r\n      <p>This will delete the entire calendar</p>\r\n      <Button onClick={()=>_setCalendar(fill_calendar([], []))}>ClearCal</Button>\r\n    </Layout>\r\n)\r\nexport default PatternPreference","\r\nimport { connect } from 'react-redux'\r\nimport { A_CAL } from '../actions/calendar'\r\nimport PatternPreference from '../../components/Preference/PatternPreference'\r\n\r\nconst StoredPatternPref = connect(\r\n  state => ({\r\n    store: state\r\n  }),  \r\n  dispatch => ({\r\n    _setCalendar(calendar) {\r\n      dispatch(A_CAL.setCalendar(calendar) )\r\n    }\r\n  })\r\n  )(PatternPreference)\r\n  \r\nexport default StoredPatternPref","import React from 'react'\r\nimport { Layout, InputNumber } from \"antd\"\r\n\r\nconst TimeEstimatePreference = ({SAE, SAS, SAP, setMinimumTaskTime, store}) => {\r\n  const { ux, ui } = store\r\n  const { mainL } = ui\r\n  return(\r\n    <Layout>\r\n      <p>This will set TimeEstimatePreference </p>\r\n      <InputNumber addonBefore={mainL[ux.lang].tep_sae} min={1} max={10}\r\n         onChange={SAE} id='3'\r\n         placeholder={mainL[ux.lang].insert + ' ' +  mainL[ux.lang].tep_sae} value={ux.aggressivenessExclude}/>\r\n      <InputNumber addonBefore={mainL[ux.lang].tep_sas} min={1} max={10}\r\n          onChange={SAS} id='3'\r\n          placeholder={mainL[ux.lang].insert + ' ' +  mainL[ux.lang].tep_sae} value={ux.aggressivenessSqueezing}/>\r\n      <InputNumber addonBefore={mainL[ux.lang].tep_sap} min={1} max={10}\r\n          onChange={SAP} id='3'\r\n          placeholder={mainL[ux.lang].insert + ' ' +  mainL[ux.lang].tep_sae} value={ux.aggressivenessPermutation}/>\r\n    </Layout>\r\n  )\r\n}\r\n\r\nexport default TimeEstimatePreference","import { connect } from 'react-redux'\r\nimport { A_UX } from '../actions/ux'\r\nimport TimeEstimatePreference from '../../components/Preference/TimeEstimatePreference'\r\n\r\nconst StoredTEP = connect(\r\n  state => ({\r\n    store: state\r\n  }),  \r\n  dispatch => ({\r\n    SAE(num) {\r\n      dispatch(A_UX.setAggressivenessExclude(num) )\r\n    },\r\n    SAS(num) {\r\n      dispatch(A_UX.setAggressivenessSqueezing(num) )\r\n    },\r\n    SAP(num) {\r\n      dispatch(A_UX.setAggressivenessPermutation(num) )\r\n    },\r\n    setMinimumTaskTime(num) {\r\n      dispatch(A_UX.setMinimumTaskTime(num) )\r\n    }\r\n  })\r\n  )(TimeEstimatePreference)\r\n  \r\nexport default StoredTEP","import React, { useEffect, FC } from \"react\";\r\nimport { Layout, Calendar } from \"antd\";\r\nimport { schedule_render, buildIterDate } from '../../lib/date_methods'\r\nimport { InitialState as UXType } from './../../store/reducer/ux'\r\nimport { TaskType, DateTrackType } from \"../../types/data\"\r\nimport moment, { Moment } from 'moment'\r\nconst { Sider } = Layout\r\ntype PropsType = {\r\n  schedule: TaskType[]\r\n  chosenDay: DateTrackType\r\n  calendar: any\r\n  ux: UXType\r\n  choseD: (day: DateTrackType) => void\r\n  setSched: (schedule: TaskType[]) => void\r\n}\r\nconst SideBar: FC<PropsType> = ({schedule, chosenDay, calendar, ux, choseD, setSched}) => {\r\n  useEffect(() => {\r\n    if(!schedule.length && ux.completedFillPattern ){\r\n        handleClick(moment())\r\n      }\r\n    }\r\n  )\r\n  const handleClick = (dateString: Moment|undefined): void => {\r\n    dateString && choseD(buildIterDate(new Date(dateString.format('YYYY MM DD') ) ) )\r\n    setSched(schedule_render(chosenDay, calendar))    \r\n  }\r\n    return (\r\n      <Sider width={320} style={{ background: \"#fff\" }} breakpoint=\"sm\" collapsedWidth=\"0\">\r\n         <div style={{ width: 300, border: '1px solid #d9d9d9', borderRadius: 4 }}>\r\n          <Calendar fullscreen={false} onChange={handleClick} className='calendar' />\r\n        </div>       \r\n      </Sider>\r\n    );\r\n  }\r\nexport default SideBar\r\n","import React from 'react';\r\nimport { NavLink } from 'react-router-dom'\r\nimport { Menu, Icon  } from \"antd\";\r\nconst { SubMenu } = Menu;\r\n\r\nconst Navigation = ({ lang, text }) => {\r\n  return(\r\n    <Menu theme='dark' mode=\"horizontal\">\r\n    <SubMenu\r\n        title={\r\n          <span className=\"submenu-title-wrapper\">\r\n            <Icon type=\"unordered-list\" />\r\n            { text[lang].task }\r\n          </span>\r\n        }\r\n      >        \r\n          <Menu.Item >      \r\n            <NavLink to='/'>{ text[lang].schedule }</NavLink>\r\n          </Menu.Item>\r\n          <Menu.Item >      \r\n            <NavLink to='/compl'>{ text[lang].job }</NavLink>\r\n          </Menu.Item>        \r\n          <Menu.Item >      \r\n            <NavLink to='/'>{ text[lang].schedule }</NavLink>\r\n          </Menu.Item>\r\n          <Menu.Item >      \r\n            <NavLink to='/'>{ text[lang].schedule }</NavLink>\r\n          </Menu.Item>        \r\n      </SubMenu>\r\n\r\n    <SubMenu\r\n        title={\r\n          <span className=\"submenu-title-wrapper\">\r\n            <Icon type=\"bar-chart\" />\r\n            { text[lang].statistic }\r\n          </span>\r\n        }\r\n      >        \r\n          <Menu.Item >      \r\n            <NavLink to='/'>{ text[lang].schedule }</NavLink>\r\n          </Menu.Item>\r\n          <Menu.Item >      \r\n            <NavLink to='/'>{ text[lang].schedule }</NavLink>\r\n          </Menu.Item>        \r\n          <Menu.Item >      \r\n            <NavLink to='/'>{ text[lang].schedule }</NavLink>\r\n          </Menu.Item>\r\n          <Menu.Item >      \r\n            <NavLink to='/'>{ text[lang].schedule }</NavLink>\r\n          </Menu.Item>        \r\n      </SubMenu>\r\n\r\n  \r\n\r\n      <SubMenu\r\n        title={\r\n          <span className=\"submenu-title-wrapper\">\r\n            <Icon type=\"setting\" />\r\n            { text[lang].preference }\r\n          </span>\r\n        }\r\n      >        \r\n          <Menu.Item >      \r\n            <NavLink to='/set'>{ text[lang].preference }</NavLink>\r\n          </Menu.Item>\r\n          <Menu.Item >      \r\n            <NavLink to='/tep'>{ text[lang].tep }</NavLink>\r\n          </Menu.Item>        \r\n          <Menu.Item >      \r\n           <NavLink to='/set'>{ text[lang].preference }</NavLink>\r\n          </Menu.Item>\r\n          <Menu.Item >      \r\n           <NavLink to='/set'>{ text[lang].preference }</NavLink>\r\n          </Menu.Item>        \r\n      </SubMenu>\r\n        \r\n      <SubMenu\r\n        title={\r\n          <span className=\"submenu-title-wrapper\">\r\n            <Icon type=\"setting\" />\r\n            {text[lang].preference}\r\n          </span>\r\n        }\r\n      >        \r\n          <Menu.Item >      \r\n            <NavLink to='/set'>{text[lang].preference}</NavLink>\r\n          </Menu.Item>\r\n          <Menu.Item >      \r\n            <NavLink to='/set'>{text[lang].preference}</NavLink>\r\n          </Menu.Item>        \r\n          <Menu.Item >      \r\n           <NavLink to='/set'>{text[lang].preference}</NavLink>\r\n          </Menu.Item>\r\n          <Menu.Item >      \r\n           <NavLink to='/set'>{text[lang].preference}</NavLink>\r\n          </Menu.Item>        \r\n      </SubMenu>\r\n      <SubMenu\r\n        title={\r\n          <span className=\"submenu-title-wrapper\">\r\n            <Icon type=\"setting\" />\r\n            {text[lang].preference}\r\n          </span>\r\n        }\r\n      >        \r\n          <Menu.Item >      \r\n            <NavLink to='/set'>{text[lang].preference}</NavLink>\r\n          </Menu.Item>\r\n          <Menu.Item >      \r\n            <NavLink to='/set'>{text[lang].preference}</NavLink>\r\n          </Menu.Item>        \r\n          <Menu.Item >      \r\n           <NavLink to='/set'>{text[lang].preference}</NavLink>\r\n          </Menu.Item>\r\n          <Menu.Item >      \r\n           <NavLink to='/set'>{text[lang].preference}</NavLink>\r\n          </Menu.Item>        \r\n      </SubMenu>\r\n\r\n      <SubMenu\r\n        title={\r\n          <span className=\"submenu-title-wrapper\">\r\n            <Icon type=\"setting\" />\r\n            {text[lang].preference}\r\n          </span>\r\n        }\r\n      >        \r\n          <Menu.Item >      \r\n            <NavLink to='/set'>{text[lang].preference}</NavLink>\r\n          </Menu.Item>\r\n          <Menu.Item >      \r\n            <NavLink to='/set'>{text[lang].preference}</NavLink>\r\n          </Menu.Item>        \r\n          <Menu.Item >      \r\n           <NavLink to='/set'>{text[lang].preference}</NavLink>\r\n          </Menu.Item>\r\n          <Menu.Item >      \r\n           <NavLink to='/set'>{text[lang].preference}</NavLink>\r\n          </Menu.Item>        \r\n      </SubMenu>\r\n\r\n      <SubMenu\r\n        title={\r\n          <span className=\"submenu-title-wrapper\">\r\n            <Icon type=\"setting\" />\r\n            {text[lang].preference}\r\n          </span>\r\n        }\r\n      >        \r\n          <Menu.Item >      \r\n            <NavLink to='/set'>{text[lang].preference}</NavLink>\r\n          </Menu.Item>\r\n          <Menu.Item >      \r\n            <NavLink to='/set'>{text[lang].preference}</NavLink>\r\n          </Menu.Item>        \r\n          <Menu.Item >      \r\n           <NavLink to='/set'>{text[lang].preference}</NavLink>\r\n          </Menu.Item>\r\n          <Menu.Item >      \r\n           <NavLink to='/set'>{text[lang].preference}</NavLink>\r\n          </Menu.Item>        \r\n      </SubMenu>\r\n  </Menu>\r\n  )\r\n}\r\nexport default Navigation\r\n\r\n","import React from \"react\";\r\nimport * as d3 from \"d3\";\r\nimport { withFauxDOM } from 'react-faux-dom'\r\n\r\nclass BarChartV4 extends React.Component {\r\n    scaleColor = d3.scaleSequential(d3.interpolateViridis);\r\n    scaleHeight = d3.scaleLinear();\r\n    scaleWidth = d3.scaleBand().padding(0.1);\r\n\r\n    componentDidMount() {\r\n        this.updateChart();\r\n    }\r\n\r\n    componentDidUpdate (prevProps, prevState) { \r\n        if (this.props.data !== prevProps.data) {\r\n            this.updateChart();\r\n        }\r\n    }\r\n\r\n    updateChart() {\r\n    this.updateScales();\r\n\r\n    const { data, width, height, animDuration } = this.props;\r\n        const faux = this.props.connectFauxDOM(\"g\", \"chart\");\r\n        const bars = d3.select(faux)\r\n                            .selectAll(\".bar\")\r\n                            .data(data, function key(d) { return d.item });\r\n        bars.exit()\r\n            .transition().duration(animDuration)\r\n                .attr(\"y\", height)\r\n                .attr(\"height\", 0)\r\n                .style(\"fill-opacity\", 0)\r\n            .remove();\r\n\r\n        bars.enter()\r\n            .append(\"rect\")\r\n                .attr(\"class\", \"bar\")\r\n                .attr(\"y\", height)\r\n                .attr(\"x\", width )\r\n                .attr(\"width\", 0)\r\n                .attr(\"height\", 0)\r\n                .attr(\"rx\", 5 ).attr(\"ry\", 5 )\r\n            .merge(bars)\r\n                .transition().duration(animDuration)\r\n                .attr(\"y\", (d) => ( this.scaleHeight(d.count) ))\r\n                .attr(\"height\", (d) => (height - this.scaleHeight(d.count)) )\r\n                .attr(\"x\", (d, i) => ( this.scaleWidth(d.item) ) )\r\n                .attr(\"width\", this.scaleWidth.bandwidth() )\r\n                .style(\"fill\",  (d, i) => ( this.scaleColor(i) ));\r\n\r\n        this.props.animateFauxDOM(800);\r\n    }\r\n\r\n    updateScales() {\r\n        const { data, width, height } = this.props;\r\n        this.scaleColor.domain([0, data.length]);\r\n        this.scaleWidth\r\n                 .domain(data.map((d) => (d.item)))\r\n                 .range([0, width]);\r\n        this.scaleHeight\r\n                 .domain(d3.extent(data, (d) => (d.count)))\r\n                 .range([height - 20, 0]);\r\n    }\r\n\r\n    render() {\r\n        const { width, height } = this.props;\r\n        return (\r\n            <svg width={width} height={height} >\r\n                { this.props.chart }\r\n            </svg>\r\n        );    \r\n    }\r\n}\r\n\r\nexport default withFauxDOM(BarChartV4);\r\n\r\n","import React, { FC, useEffect } from \"react\"\r\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\"\r\nimport { Layout, Select } from \"antd\"\r\nimport StoredSchedule from \"../Schedule/StoredSchedule\"\r\nimport StoredComplTasks from \"../ComplicatedTasks/StoredComplTasks\"\r\nimport StoreStat from \"../../store/container/StoreStat\"\r\nimport StoredPatternPref from \"../../store/container/StoredPatternPref\"\r\nimport StoredTEP from \"../../store/container/StoredTEP\"\r\nimport SideBar from \"../SideBar/SideBar\"\r\nimport Navigation from '../Navigation/Navigation'\r\nimport { fill_calendar } from '../../lib/date_methods'\r\n\r\nimport { TaskType, DateTrackType, LocaleType, text } from './../../types/data'\r\nimport  './Main.less'\r\nimport { InitialState as coreType} from './../../store/reducer/calendar'\r\nimport { InitialState as uiType } from './../../store/reducer/ui'\r\nimport { InitialState as uxType } from './../../store/reducer/ux'\r\nimport TaskForm from '../ModalWindow/TaskForm'\r\n\r\nimport BarChartV4 from './../../components/ModalWindow/graphs/ScheduleTask'\r\nconst { Header, Content, Footer } = Layout\r\nconst { Option } = Select\r\nexport type MapPropsType = {\r\n  core: coreType\r\n  ui: uiType\r\n  ux: uxType\r\n}\r\nexport type DispatchPropsType = {\r\n  _setCalendar: (calendar: any) => void\r\n  _choseDay: (day: DateTrackType) => void\r\n  _langChange: (lang: LocaleType) => void\r\n  _setWeekdaysPattern: (weekdays: TaskType[]) => void\r\n  _setSchedule: (schedule: TaskType[]) => void\r\n  _setWeekendsPattern: (weekends: TaskType[]) => void\r\n  changeFieldsValue: (id: string, value: string) => void\r\n  changeCheckBox: (id: string, checked: boolean) => void\r\n  togglePatternModal: () => void\r\n}\r\nconst Main: FC<MapPropsType & DispatchPropsType> = props => {\r\n  const {core, ui, ux, _setCalendar, _choseDay, _langChange, _setWeekdaysPattern,\r\n     _setSchedule, _setWeekendsPattern, changeFieldsValue, changeCheckBox,\r\n      togglePatternModal} = props \r\n  const { weekdays, weekends } = core  \r\n  useEffect(() => {\r\n    const startCondition = Object.entries(core.calendar).length === 0 && ux.completedFillPattern\r\n    if(!ui.start && (!weekdays.length || !weekends.length) ) togglePatternModal();\r\n    if(startCondition) _setCalendar(fill_calendar(weekdays, weekends) )\r\n  })\r\n  const remove = (id?: number) => ui.pattern_modal_mode ? _setWeekendsPattern(weekends\r\n    .filter( (task: TaskType) => +task.id !==id ) ) : _setWeekdaysPattern(weekdays\r\n    .filter( (task: TaskType)=> +task.id !== id) )\r\n  const langChange = (e: LocaleType) => _langChange(e)\r\n  const inputText = (value: any, id: string) => changeFieldsValue(id, value)\r\n  const setCheckBox = (checked: any, id: string) => changeCheckBox(id, checked)\r\n  return ( \r\n      <Router>               \r\n          <Layout className=\"time_saver\">\r\n            <Header className=\"time_saver_header\">\r\n              <h1>{text[ux.lang].title}</h1>\r\n              <Select defaultValue={ux.lang} onChange={langChange} className='langChange'>\r\n                <Option value=\"En\">English</Option>\r\n                <Option value=\"Ru\">Русский</Option>\r\n                <Option value=\"es\">Espanol</Option>\r\n                <Option value=\"fr\">Franch</Option>\r\n                <Option value=\"de\">German</Option>\r\n                <Option value=\"zh\">zh-Hans</Option>               \r\n              </Select>\r\n            </Header> \r\n            <Navigation lang={ux.lang} text={text} />           \r\n            <Content className=\"time_saver_content\">\r\n            <Layout>\r\n              <SideBar \r\n                choseD={_choseDay} \r\n                setSched={_setSchedule} \r\n                schedule={core.schedule} \r\n                chosenDay={core.chosenDay} \r\n                calendar={core.calendar} \r\n                ux={ux}\r\n              />\r\n              <Switch>\r\n                  <Route exact path='/' component={StoredSchedule}/>\r\n                  <Route path='/compl' component={StoredComplTasks}/>\r\n                  <Route path='/stat' component={StoreStat}/>\r\n                  <Route path='/set' component={StoredPatternPref}/>\r\n                  <Route path='/tep' component={StoredTEP}/>\r\n                </Switch>                \r\n                <TaskForm\r\n                  core={core}                  \r\n                  ui={ui}\r\n                  lang={ux.lang}\r\n                  inputText={inputText}\r\n                  setCheckBox={setCheckBox}\r\n                  remove={remove}\r\n                />\r\n                \r\n                <BarChartV4 \r\n                data={[15, 8, 42, 4]}               \r\n                width='600'\r\n                height='300'\r\n                animDuration='30'\r\n                />\r\n              </Layout> \r\n            </Content>\r\n            <Footer className=\"time_saver_footer\">&copy; My Company</Footer>\r\n          </Layout>        \r\n      </Router>\r\n    );\r\n  }\r\nexport default Main\r\n\r\n","import { Dispatch } from 'redux'\r\nimport { connect } from 'react-redux'\r\nimport { AppStateType, CoreActionsTypes } from '../../store/store';\r\nimport { DateTrackType, TaskType, LocaleType } from '../../types/data'\r\nimport { A_CAL } from '../../store/actions/calendar'\r\nimport { A_UX } from '../../store/actions/ux'\r\nimport { A_UI } from '../../store/actions/ui'\r\nimport Main, { MapPropsType, DispatchPropsType} from './Main'\r\n\r\nconst StoredMain = connect<MapPropsType, DispatchPropsType, {}, AppStateType>(\r\n  (state: AppStateType) => ({\r\n    core: state.core,\r\n    ui: state.ui,\r\n    ux: state.ux,\r\n  }),  \r\n  (dispatch: Dispatch<CoreActionsTypes>) => ({\r\n    _setCalendar(calendar: any) {     \r\n      dispatch(A_CAL.setCalendar(calendar) )\r\n    },\r\n    _choseDay(day: DateTrackType) {\r\n     dispatch(A_CAL.choseDay(day) )\r\n    },\r\n    _langChange(lang: LocaleType) {\r\n     dispatch(A_UX.langChange(lang) )\r\n    },\r\n    _setSchedule(schedule: TaskType[]) {     \r\n      dispatch(A_CAL.setSchedule(schedule) )\r\n    },    \r\n    togglePatternModal() {    \r\n    dispatch(A_UI.togglePatternModal() )\r\n    },\r\n    _setWeekdaysPattern(weekdays: TaskType[]) {\r\n      dispatch(A_CAL.setWeekdaysPattern(weekdays) )\r\n    },\r\n    _setWeekendsPattern(weekends: TaskType[]) {\r\n      dispatch(A_CAL.setWeekendsPattern(weekends) )\r\n    },\r\n    changeFieldsValue(id: string, value: string) {\r\n      dispatch(A_UI.changeFieldsValue(id, value) )\r\n    },\r\n    changeCheckBox(id: string, checked: boolean) {\r\n      dispatch(A_UI.changeCheckBox(id, checked) )\r\n    }\r\n  })\r\n  )(Main)\r\n    \r\nexport default StoredMain\r\n  \r\n  \r\n\r\n  ","import { InferActionsTypes } from './../store';\r\nimport { ComplicatedTaskType, DateTrackType, TaskType } from './../../types/data'\r\nimport { A_CAL } from './../actions/calendar'\r\n\r\nconst initialState = {\r\n  calendar: {},\r\n  chosenDay: { year: 0, month: 0, day: 0 } as DateTrackType,\r\n  schedule: [] as TaskType[],\r\n  tasks: [] as ComplicatedTaskType[],\r\n  weekdays: [] as TaskType[],\r\n  weekends: [] as TaskType[],\r\n  quickTask: [] as TaskType[] \r\n}\r\n\r\nexport type InitialState = typeof initialState\r\nexport type ActionsTypes = InferActionsTypes<typeof A_CAL>\r\n\r\nexport const core = (state = initialState, action: ActionsTypes): InitialState => {\r\n  switch(action.type) {\r\n    case 'SET_CAL': return {...state, calendar: action.calendar}\r\n    case 'CHOSE_DAY': return {...state, chosenDay: action.day}\r\n    case 'MANAGE_SIMPLE_TASK': return {...state, calendar: action.calendar} \r\n    case 'ADD_COMPLICATED_TASK': return {...state, tasks: [...state.tasks, action.task] }\r\n    case 'REMOVE_COMPLICATED_TASK': return {\r\n      ...state, tasks: state.tasks.filter( (task: ComplicatedTaskType) => task.id !== action.id)\r\n    }    \r\n    case 'SET_SCHEDULE': return {...state, schedule: action.schedule}\r\n    case 'SET_WEEKDAY_PATTERN': return {...state, weekdays: action.weekdays}\r\n    case 'SET_WEEKEND_PATTERN': return {...state, weekends: action.weekends}\r\n    default: return state\r\n  }\r\n}\r\n\r\n","import { TaskType, ComplicatedTaskType, Form  } from '../types/data'\r\n\r\nfunction setFormInputField<TaskFieldValue>(field: [string, TaskFieldValue], index: number): Form {\r\n  return {\r\n    tag: 'input',  \r\n    field: field[0],\r\n    id: index.toString(),\r\n    value: typeof field[1] === 'string' ? field[1] : '',\r\n    checked: false, \r\n    data: [],  \r\n  }\r\n}\r\nfunction setFormCheckboxField<TaskFieldValue>(field: [string, TaskFieldValue], index: number): Form {\r\n  return {\r\n    tag: 'checkbox',  \r\n    field: field[0],\r\n    id: index.toString(),\r\n    value: '',\r\n    checked: typeof field[1] === 'boolean' ? field[1] : false,\r\n    data: [], \r\n  }\r\n}\r\nfunction setFormCalpikerField<TaskFieldValue>(field: [string, TaskFieldValue], index: number): Form {\r\n  return {\r\n    tag: 'data-picker',  \r\n    field: field[0],\r\n    id: index.toString(),\r\n    value: '',\r\n    checked: false,\r\n    data: field[1],  \r\n  }\r\n}\r\nconst parseFields = (field: string, index: number): Form => {\r\n  switch(field) {\r\n    case 'deadline': return setFormCalpikerField([field, []], index)\r\n    case 'exclusivity': \r\n    case 'compressibility':\r\n    case 'urgent':\r\n    case 'movable': return setFormCheckboxField([field, false], index)\r\n    default: return setFormInputField([field, ''], index)\r\n  }\r\n}\r\nconst parseSimpleTask = (taskEntries: [string, string|boolean], index: number): Form => {\r\n  switch(taskEntries[0]) {\r\n    case 'title':\r\n    case 'id':\r\n    case 'start':\r\n    case 'end':\r\n    case 'importance': return setFormInputField<string|boolean>(taskEntries, index) \r\n    default: return setFormCheckboxField<string|boolean>(taskEntries, index)\r\n  }\r\n}\r\nconst parseComplicatedTask = (taskEntries: [string, string|boolean|string[]], index: number): Form => {\r\n  //taskEntries[0] == 'deadline'? console.log(taskEntries[1]): console.log(index)\r\n  switch(taskEntries[0]) {\r\n    case 'title':\r\n    case 'id':\r\n    case 'start':\r\n    case 'end':\r\n    case 'importance':\r\n    case 'labour': return setFormInputField<string|boolean|string[]>(taskEntries, index)    \r\n    case 'deadline': return setFormCalpikerField<string|boolean|string[]>(taskEntries, index)\r\n    default: return setFormCheckboxField<string|boolean|string[]>(taskEntries, index)\r\n  }\r\n}\r\nexport const setFormField = (fields: string[]): Form[] => fields.map((field, i) => parseFields(field, i))\r\nexport const setFormFieldFromSimpleTask = (task: TaskType): Form[] => Object.entries(task)\r\n  .map((taskEntries, i) => parseSimpleTask(taskEntries, i))\r\nexport const setFormFieldFromComplicatedTask = (task: ComplicatedTaskType): Form[] => Object.entries(task)\r\n  .map((taskEntries, i) => parseComplicatedTask(taskEntries, i))\r\n","import { A_UI } from '../actions/ui'\r\nimport { InferActionsTypes } from './../store'\r\nimport { setFormField, setFormFieldFromSimpleTask, setFormFieldFromComplicatedTask } from '../../lib/form_methods'\r\nimport { Form } from './../../types/data'\r\n\r\nconst initialState = {\r\n  modal_AS_visible: false, \r\n  modal_AS_mode: false, \r\n  modal_ACT_visible: false, \r\n  modal_ACT_mode: false, \r\n  pattern_modal_visible: false, \r\n  pattern_modal_mode: false, \r\n  info_modal_visible: false, \r\n  formEl: [] as Form[],\r\n  modalType: '1',\r\n  simpleTaskEdit: false,\r\n  complTaskEdit: false,\r\n  start: false\r\n}\r\n\r\nconst complTaskField = ['title', 'id', 'deadline', 'importance', 'labour', 'exclusivity', 'compressibility', 'urgent', 'movable']\r\nconst simplTaskField = ['title', 'id', 'start', 'end', 'importance', 'exclusivity', 'compressibility', 'urgent', 'movable']\r\nexport type InitialState = typeof initialState \r\nexport type ActionsTypes = InferActionsTypes<typeof A_UI>\r\nexport const ui = (state = initialState, action: ActionsTypes): InitialState => {\r\n  switch(action.type) {    \r\n    case 'TOGGLE_MODAL_ADD_SIMPLE_TASK': return {\r\n      ...state,\r\n      modal_AS_visible: !state.modal_AS_visible,\r\n      modalType: '2', formEl: state.simpleTaskEdit ? state.formEl: setFormField(simplTaskField)\r\n    }\r\n    case 'CANCEL_MODAL_ADD_SIMPLE_TASK': return {\r\n      ...state,\r\n      modal_AS_visible: false,\r\n    }    \r\n    case 'TOGGLE_MODAL_ADD_COMPLICATED_TASK': return {\r\n      ...state,\r\n      modal_ACT_visible: !state.modal_ACT_visible,\r\n      modalType: '3', formEl: state.complTaskEdit ? state.formEl: setFormField(complTaskField)\r\n    }\r\n    case 'CANCEL_MODAL_ADD_COMPLICATED_TASK': \r\n    return {\r\n      ...state,\r\n      modal_ACT_visible: false,\r\n    }\r\n    case 'TOGGLE_MODE_MODAL_ADD_SIMPLE_TASK': return {\r\n      ...state,\r\n      modal_AS_mode: !state.modal_AS_mode,\r\n    }\r\n    case 'TOGGLE_MODE_MODAL_ADD_COMPLICATED_TASK': return {\r\n      ...state,\r\n      modal_ACT_mode: !state.modal_ACT_mode,\r\n    }\r\n    case 'TOGGLE_PATTERN_MODAL': return {...state, start: true,\r\n      pattern_modal_visible: !state.pattern_modal_visible,\r\n      modalType: '1', formEl: setFormField(simplTaskField),\r\n    }\r\n    case 'TOGGLE_MODE_PATTERN_MODAL': return {\r\n      ...state,\r\n      pattern_modal_mode: !state.pattern_modal_mode,\r\n    }\r\n    case 'TOGGLE_INFO_MODAL': return {\r\n      ...state,\r\n      info_modal_visible: !state.info_modal_visible,\r\n    }\r\n    case 'CHANGE_FIELD_VALUE': \r\n    return {...state, formEl: state.formEl.map((field: Form) => {\r\n      field.value = field.id === action.id ? action.value: field.value\r\n      return field\r\n    })}\r\n    case 'CHANGE_FIELD_CHECKBOX': \r\n    return {...state, formEl: state.formEl.map((field: Form) => {\r\n      field.checked = field.id === action.id ? action.checked: field.checked\r\n      return field      \r\n    })}\r\n    case 'CHANGE_FIELD_DATA': return {...state, formEl: state.formEl.map((field: Form) => {\r\n      field.data = field.field === 'deadline' ? action.data: field.data\r\n      return field\r\n    })}\r\n    case 'RUN_EDIT_SIMPLE_TASK': return {...state, simpleTaskEdit: true, formEl: setFormFieldFromSimpleTask(action.task)}\r\n    case 'RUN_EDIT_COMPLE_TASK': return {...state, complTaskEdit: true, formEl: setFormFieldFromComplicatedTask(action.task)}\r\n    case 'END_EDIT_COMPLE_TASK': return {...state, complTaskEdit: false}\r\n    default: return state\r\n  } \r\n}","import { A_UX } from '../actions/ux'\r\nimport { InferActionsTypes } from './../store';\r\nimport { LocaleType } from '../../types/data'\r\nconst initialState = {\r\n  lang: 'Ru' as LocaleType,\r\n  completedFillPattern: false,\r\n  aggressivenessExclude: 5,\r\n  aggressivenessSqueezing: 5,\r\n  aggressivenessPermutation: 5,\r\n  compressionRatio: 1,\r\n  minTaskTime: 30,\r\n}\r\nexport type InitialState = typeof initialState \r\nexport type ActionsTypes = InferActionsTypes<typeof A_UX>\r\nexport const ux = (state = initialState, action: ActionsTypes): InitialState => {\r\n  switch(action.type) {\r\n    case 'CHANGE_LANG': return {...state, lang: action.lang}\r\n    case 'COMPLETE_FILL_PATTERN': return {\r\n      ...state, completedFillPattern: !state.completedFillPattern\r\n    }\r\n    case 'SET_AGGRESSIVENESS_EXCLUDE': return {\r\n      ...state, aggressivenessExclude: action.aggressivenessExclude\r\n    }\r\n    case 'SET_AGGRESSIVENESS_SQUEEZING': return {\r\n      ...state, aggressivenessSqueezing: action.aggressivenessSqueezing\r\n    }\r\n    case 'SET_AGGRESSIVENESS_PERMUTATION': return {\r\n      ...state, aggressivenessPermutation: action.aggressivenessPermutation\r\n    }\r\n    case 'SET_MIN_TASK_TIME': return {...state, minTaskTime: action.minTaskTime}\r\n    default: return state\r\n  }\r\n}","import { createStore, combineReducers, compose } from 'redux'\r\nimport { core } from './reducer/calendar'\r\nimport { ui } from './reducer/ui'\r\nimport { ux } from './reducer/ux'\r\nimport { ActionsTypes as CalendarActionsTypes } from  './reducer/calendar'\r\nimport { ActionsTypes as UIActionsTypes } from  './reducer/ui'\r\nimport { ActionsTypes as UXActionsTypes } from  './reducer/ux'\r\nexport type CoreActionsTypes = CalendarActionsTypes|UIActionsTypes|UXActionsTypes\r\nconst rootReducer = combineReducers({ core, ui, ux })\r\ntype RootReducerType = typeof rootReducer\r\nexport type AppStateType = ReturnType<RootReducerType>\r\ndeclare global {\r\n  interface Window {\r\n    __REDUX_DEVTOOLS_EXTENSION_COMPOSE__?: typeof compose;\r\n  }\r\n}\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nexport const store = createStore(rootReducer,\r\n/*\r\n  (localStorage['redux-store']) && JSON.parse(localStorage['redux-store']).core.calendar ?\r\n  JSON.parse(localStorage['redux-store']) : {}\r\n)\r\nstore.subscribe(() => {\r\n  localStorage['redux-store'] = JSON.stringify(store.getState())\r\n})\r\n*/\r\n  composeEnhancers() )\r\nexport type InferActionsTypes<T> = T extends { [keys: string]: (...args: any[]) => infer U } ? U : never\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport StoredMain from './components/Main/StoredMain';\nimport { Provider } from 'react-redux'\nimport { store } from './store/store'\n\nReactDOM.render(\n  <Provider store={store}>\n   <StoredMain /> \n  </Provider>\n, document.getElementById('root'));\n\n\n\n\n\n\n\n"],"sourceRoot":""}